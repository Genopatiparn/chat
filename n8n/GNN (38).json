{
  "name": "GNN",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/plain"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4080,
        6480
      ],
      "id": "4294e897-4ac5-4a44-a78e-ce7760081176",
      "name": "Respond to Webhook1",
      "notesInFlow": false
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô FAQ response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (inputData.source === 'faq_cache') {\n    return [{\n      json: {\n        text: inputData.response\n      }\n    }];\n  }\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ human response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (inputData.requiresHumanResponse) {\n    const extractedData = $('FAQ Cache Checker').item.json.output;\n    const name = extractedData?.name || '';\n    const issue = extractedData?.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';\n    \n    let userReply = name ? \n      `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${name}\\n‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"\\n‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞` :\n      `‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"\\n‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞`;\n    \n    return [{\n      json: {\n        text: userReply\n      }\n    }];\n  }\n  \n  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥ - ‡πÉ‡∏ä‡πâ response ‡∏à‡∏≤‡∏Å AI ‡∏´‡∏£‡∏∑‡∏≠ fallback\n  const responseText = inputData.response || inputData.text || \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\";\n  \n  return [{\n    json: {\n      text: responseText\n    }\n  }];\n  \n} catch (error) {\n  console.error('Enhanced Admin Alert Error:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ 02-222-2222\"\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5660,
        6460
      ],
      "id": "1382a0af-d5d6-4f9a-a22d-de6a7d76ec67",
      "name": "Enhanced Admin Alert"
    },
    {
      "parameters": {
        "text": "={{ $json.message }}",
        "attributes": {
          "attributes": [
            {
              "name": "name",
              "description": "‡∏ä‡∏∑‡πà‡∏≠ ,  Name"
            },
            {
              "name": "phone",
              "description": "‡πÄ‡∏ö‡∏≠‡∏£‡πå"
            },
            {
              "name": "issue",
              "description": "‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏à‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏Å‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏Å‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -6800,
        6460
      ],
      "id": "0cbd0919-185b-4cb1-b52b-4b0af6ed5b14",
      "name": "Information Extractor1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const userMessage = inputData.output?.issue || inputData.message || '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';\n  const startTime = Date.now();\n  const timeout = 25000; // 25 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\n  \n  console.log('Processing QA with timeout for:', userMessage);\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ FAQ ‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πá‡∏Ñ)\n  if (inputData.source === 'faq_cache') {\n    return [{\n      json: {\n        response: inputData.faqResponse,\n        source: 'faq_cache',\n        responseTime: Date.now() - startTime\n      }\n    }];\n  }\n  \n  // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI call ‡∏à‡∏£‡∏¥‡∏á - ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AI ‡∏û‡∏£‡πâ‡∏≠‡∏° timeout\n  try {\n    // ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AI ‡∏à‡∏£‡∏¥‡∏á ‡πÅ‡∏ï‡πà‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢ setTimeout\n    const aiResponse = await new Promise((resolve, reject) => {\n      // Timeout handler\n      const timeoutId = setTimeout(() => {\n        reject(new Error('AI_TIMEOUT'));\n      }, timeout);\n      \n      // ‡∏à‡∏≥‡∏•‡∏≠‡∏á AI call (‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å OpenAI API)\n      setTimeout(() => {\n        clearTimeout(timeoutId);\n        // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á AI\n        if (Math.random() > 0.1) { // 90% success rate\n          resolve({\n            response: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡∏≤‡∏∞‡∏à‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö \"${userMessage}\" ‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\\n\\n‡πÅ‡∏ï‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà:\\nüìû ‡πÇ‡∏ó‡∏£: 02-222-2222\\nüí¨ LINE: @support_pos\\n\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞`,\n            responseTime: Date.now() - startTime\n          });\n        } else {\n          reject(new Error('AI_ERROR'));\n        }\n      }, Math.random() * 3000 + 1000); // 1-4 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ\n    });\n    \n    console.log('AI response received in', aiResponse.responseTime, 'ms');\n    return [{\n      json: {\n        response: aiResponse.response,\n        source: 'ai_success',\n        responseTime: aiResponse.responseTime\n      }\n    }];\n    \n  } catch (error) {\n    console.error('AI call failed:', error.message);\n    throw error;\n  }\n  \n} catch (error) {\n  console.error('Enhanced QA Chain Error:', error);\n  \n  let fallbackMessage = \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•\";\n  let requiresHuman = false;\n  \n  if (error.message === 'AI_TIMEOUT') {\n    fallbackMessage = \"‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\";\n    requiresHuman = true;\n  } else if (error.message.includes('rate_limit') || error.message.includes('429')) {\n    fallbackMessage = \"‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\";\n    requiresHuman = true;\n  } else if (error.message.includes('network') || error.message.includes('connection')) {\n    fallbackMessage = \"‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏Ñ‡πà‡∏∞\";\n    requiresHuman = true;\n  }\n  \n  if (requiresHuman) {\n    fallbackMessage += \"\\n\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\";\n  }\n  \n  return [{\n    json: {\n      response: fallbackMessage,\n      source: 'fallback',\n      requiresHumanResponse: requiresHuman,\n      error: error.message,\n      responseTime: Date.now() - startTime\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5840,
        5740
      ],
      "id": "ffea8716-284c-4032-9458-3833500befe3",
      "name": "Enhanced QA with Timeout"
    },
    {
      "parameters": {
        "topK": 7
      },
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        -5760,
        5960
      ],
      "id": "02dac23f-3d83-44c7-a8a7-2dadaae0505b",
      "name": "Vector Store Retriever",
      "notesInFlow": false
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "my_collection55",
          "mode": ""
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        -5740,
        6120
      ],
      "id": "2e6267c4-6668-4b75-a12e-340b596d4df9",
      "name": "Qdrant Vector Store",
      "credentials": {
        "qdrantApi": {
          "id": "rRKHy3jO1VHzH0Xr",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        -5640,
        6260
      ],
      "id": "18ea608f-f919-410b-b405-545410b02002",
      "name": "Embeddings OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -5920,
        5960
      ],
      "id": "cbbe5c53-15fc-42e4-8722-49222d06e313",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $json.output.issue || $json.message || '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' }}",
        "categories": {
          "categories": [
            {
              "category": "‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°",
              "description": " ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pos, ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠"
            },
            {
              "category": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
              "description": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ"
            },
            {
              "category": "‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
              "description": "‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"
            },
            {
              "category": "‡∏≠‡∏∑‡πà‡∏ô‡πÜ",
              "description": "‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢, ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì"
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà\n",
          "enableAutoFixing": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -6400,
        6440
      ],
      "id": "55bcbfd3-d83e-42c4-8f5b-d19b71a34f7b",
      "name": "Text Classifier"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -6600,
        6700
      ],
      "id": "40bffc35-2dca-4d5f-ace0-877e3acee600",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  console.log('Response Handler - Input data:', JSON.stringify(inputData, null, 2));\n  \n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• response\n  const userReply = inputData.response || inputData.text || inputData.output || inputData.answer || '';\n  const source = inputData.source || 'unknown';\n  const responseTime = inputData.responseTime || 0;\n  \n  // Log ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Cache\n  await logCacheUsage({\n    userId: $('Edit Fields1').first().json.body.events[0].source.userId,\n    message: $('Edit Fields1').first().json.body.events[0].message.text,\n    source: source,\n    responseTime: responseTime,\n    timestamp: new Date().toISOString()\n  });\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (!userReply || userReply.trim() === '') {\n    console.log('No response data found, using default message');\n    return [{\n      json: {\n        text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\\n\\n‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà: 02-222-2222\"\n      }\n    }];\n  }\n  \n  console.log('Response sent - Source:', source, 'Time:', responseTime + 'ms');\n  \n  return [{\n    json: {\n      text: userReply,\n      metadata: {\n        source: source,\n        responseTime: responseTime,\n        timestamp: new Date().toISOString()\n      }\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Response Handler:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\\n\\n‡∏´‡∏≤‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\"\n    }\n  }];\n}\n\n// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Log ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Cache\nasync function logCacheUsage(data) {\n  try {\n    // ‡πÉ‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ‡∏Ñ‡∏ß‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡∏á Google Sheets ‡∏´‡∏£‡∏∑‡∏≠ Database\n    console.log('Cache Usage Log:', JSON.stringify(data, null, 2));\n    \n    // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô\n    if (data.source === 'faq_cache') {\n      console.log('‚úÖ FAQ Cache Hit - Fast Response');\n    } else if (data.source === 'ai_success') {\n      console.log('ü§ñ AI Success - Response Time:', data.responseTime + 'ms');\n    } else if (data.source === 'fallback') {\n      console.log('‚ö†Ô∏è Fallback Used - Potential Issue');\n    }\n  } catch (error) {\n    console.error('Error logging cache usage:', error);\n  }\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5420,
        5740
      ],
      "id": "9e65b73e-894a-48cb-afc6-8bff5d4907e7",
      "name": "Response Handler with Logging"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields1').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text || '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞'\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4560,
        6480
      ],
      "id": "ab37a8d6-53cd-4602-b554-cb54407adae7",
      "name": "HTTP Request4",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tyreis88",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -9220,
        6460
      ],
      "id": "3c1083ff-ccd9-436b-b0dd-8d1f15f2c2e6",
      "name": "Webhook1",
      "webhookId": "10a617e8-a0f3-401f-be76-79e386e0e4b8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a027155a-071f-4e2c-9905-1b41abea507c",
              "name": "body.events[0].replyToken",
              "value": "={{ $('Webhook1').item.json.body.events[0].replyToken }}",
              "type": "string"
            },
            {
              "id": "812a988a-0520-46ed-af6f-0a431814a1bd",
              "name": "body.events[0].message.text",
              "value": "={{ $json.body.events[0].message.text }}",
              "type": "string"
            },
            {
              "id": "01feb716-a36a-4d7d-ac12-19bd0bb4b796",
              "name": "body.events[0].source.userId",
              "value": "={{ $json.body.events[0].source.userId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -8920,
        6460
      ],
      "id": "648096cf-6ed2-4cf0-954a-f3056424ab52",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const extractedData = $('Information Extractor1').item.json.output;\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n  if (!extractedData) {\n    console.log('No extracted data found in Admin Alert Code1');\n    return [{\n      json: {\n        text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n      }\n    }];\n  }\n  \n  const name = extractedData.name || '';\n  const issue = extractedData.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\n  let userReply = name ? \n    `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${name}\\n‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞` :\n    `‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ó‡∏µ‡πà: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞`;\n  \n  // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\n  const cleanedReply = userReply.replace(/[\\n\\r]/g, \" \").replace(/\"/g, '\\\\\"');\n  \n  console.log('Admin Alert Code1 - Generated reply:', cleanedReply);\n  \n  return [{\n    json: {\n      text: cleanedReply\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Admin Alert Code1:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5660,
        6640
      ],
      "id": "57b059ef-e60a-49aa-8970-47ddd6034f93",
      "name": "Admin Alert Code5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields1').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1680,
        8060
      ],
      "id": "f91d0bfa-debb-4e4d-9de9-e66137134fab",
      "name": "HTTP Request2",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields1').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1040,
        7400
      ],
      "id": "1d9c2360-e76d-4762-a02b-1bccf7894d05",
      "name": "HTTP Request6",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "653e6047-eb03-4452-9677-27a668dc86c5",
              "leftValue": "={{ $json.status }}",
              "rightValue": "available",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -800,
        7720
      ],
      "id": "8eb5f675-9a3e-43b5-9a63-934898ff243c",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "try {\n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô\n  const webhookData = $('Edit Fields1').item.json;\n  const userId = $('Edit Fields1').first().json.body.events[0].source.userId;\n  const message = $('Edit Fields1').first().json.body.events[0].message.text;\n  const replyToken = $('Edit Fields1').first().json.body.events[0].replyToken;\n  const flowDecision = $input.first().json.flowDecision || 'default'; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ default ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ flowDecision\n\n  console.log('Debug - Webhook data:', JSON.stringify(webhookData, null, 2));\n  console.log('Debug - userId extracted:', userId);\n  console.log('Debug - message extracted:', message);\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (!userId) {\n    console.log('No userId found in webhook data');\n    return [{\n      json: {\n        status: 'error',\n        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',\n        canProceed: false,\n        debug: {\n          webhookData: webhookData,\n          extractedUserId: userId\n        }\n      }\n    }];\n  }\n\n  if (!message || message.trim() === '') {\n    console.log('Empty message received');\n    return [{\n      json: {\n        status: 'error',\n        userId: userId,\n        message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡πà‡∏∞',\n        canProceed: false,\n        replyToken: replyToken\n      }\n    }];\n  }\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©\n  const lowerMessage = message.toLowerCase().trim();\n  if (lowerMessage === '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' || lowerMessage === 'cancel') {\n    return [{\n      json: {\n        status: 'cancelled',\n        userId: userId,\n        message: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞',\n        canProceed: false,\n        replyToken: replyToken\n      }\n    }];\n  }\n\n  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á \"1\" ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ session\n  if (message.trim() === '1') {\n    return [{\n      json: {\n        status: 'skip_session_check',\n        userId: userId,\n        message: message,\n        canProceed: true,\n        replyToken: replyToken,\n        isMenuCommand: true\n      }\n    }];\n  }\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ user ‡∏°‡∏µ active session ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏à‡∏≤‡∏Å Google Sheets\n  let sheetsData = [];\n\n  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢\n  try {\n    const sheetsResponse = $('Get row(s) in sheet2');\n    console.log('Sheets response:', JSON.stringify(sheetsResponse, null, 2));\n\n    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ items ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n    if (sheetsResponse && sheetsResponse.items) {\n      sheetsData = sheetsResponse.items;\n    } else if (sheetsResponse && sheetsResponse.item) {\n      sheetsData = [sheetsResponse.item];\n    } else {\n      sheetsData = [];\n    }\n\n    console.log('Processed sheets data length:', sheetsData.length);\n\n  } catch (sheetsError) {\n    console.log('Error accessing sheets data:', sheetsError.message);\n    sheetsData = [];\n  }\n\n  let isWaiting = false;\n  let waitingEntry = null;\n\n  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google Sheets ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô available\n  if (sheetsData.length === 0) {\n    console.log(`No data in Google Sheets - User ${userId} can proceed`);\n    return [{\n      json: {\n        status: 'available',\n        userId: userId,\n        message: message,\n        canProceed: true,\n        replyToken: replyToken,\n        timestamp: Date.now(),\n        note: 'No existing sessions found',\n        flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n      }\n    }];\n  }\n\n  // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô error ‡∏≠‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ waiting\n  const validData = sheetsData.filter(item => {\n    const row = item.json || item;\n    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà error\n    return row && typeof row === 'object' && !row.error && row.userId;\n  });\n\n  console.log('Valid data after filtering:', validData.length);\n\n  if (validData.length > 0) {\n    waitingEntry = validData.find(item => {\n      const row = item.json || item;\n      return row.userId === userId && row.status === 'waiting';\n    });\n    isWaiting = !!waitingEntry;\n  }\n\n  if (isWaiting) {\n    return [{\n      json: {\n        status: 'waiting',\n        userId: userId,\n        message: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Ñ‡πà‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå \"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å\"',\n        canProceed: false,\n        replyToken: replyToken,\n        waitingSince: (waitingEntry.json || waitingEntry).timestamp || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡πÄ‡∏ß‡∏•‡∏≤',\n        flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n      }\n    }];\n  }\n\n  // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠\n  console.log(`User ${userId} can proceed with message: ${message}`);\n\n  return [{\n    json: {\n      status: 'available',\n      userId: userId,\n      message: message,\n      canProceed: true,\n      replyToken: replyToken,\n      timestamp: Date.now(),\n      flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n    }\n  }];\n\n} catch (error) {\n  console.error('Error in Check User Session:', error);\n  return [{\n    json: {\n      status: 'error',\n      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞',\n      canProceed: false,\n      error: error.message,\n      stack: error.stack,\n      flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7620,
        6460
      ],
      "id": "423dbd83-ffdf-4656-828b-fd982f9c0ca9",
      "name": "Check User Session1"
    },
    {
      "parameters": {
        "jsCode": "// 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Code ‡πÉ‡∏ô \"Add User to Waiting\" node:\ntry {\n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Check User Session ‡πÅ‡∏ó‡∏ô\n  const sessionData = $('Check User Session1').first().json;\n  const userId = $input.first().json.userId\n  const message = $input.first().json.message\n  \n  console.log('Debug - userId found:', userId);\n  console.log('Debug - message found:', message);\n  \n  if (!userId) {\n    console.log('No userId provided for waiting session');\n    return [{\n      json: {\n        error: 'No userId provided',\n        status: 'failed'\n      }\n    }];\n  }\n  \n  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° user ‡πÄ‡∏Ç‡πâ‡∏≤ waiting list\n  const currentTime = new Date().toISOString();\n  \n  console.log(`User ${userId} added to waiting list at ${currentTime}`);\n  \n  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Sheets\n  return [{\n    json: {\n      userId: userId,\n      status: 'waiting',\n      timestamp: currentTime,\n      message: message || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Add User to Waiting:', error);\n  return [{\n    json: {\n      error: error.message,\n      status: 'failed',\n      stack: error.stack\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6520,
        7060
      ],
      "id": "c692e26d-5dfa-4aa7-b4a2-5844ce5af9f8",
      "name": "Add User to Waiting1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  let inputData = $input.length > 0 ? $input.first().json : {};\n  \n  let userId = $('Webhook1').first().json.body.events[0].source.userId\n\n  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ userId ‡πÉ‡∏ô input ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Check User Session\n  if (!userId) {\n    try {\n      const sessionData = $('Check User Session1').first().json;\n      userId = sessionData.userId;\n    } catch (e) {\n      console.log('Cannot retrieve userId from Check User Session');\n    }\n  }\n\n  if (!userId) {\n    console.log('No userId provided for removal from waiting');\n    return [{\n      json: {\n        error: 'No userId provided',\n        status: 'failed'\n      }\n    }];\n  }\n\n  const currentTime = new Date().toISOString();\n  console.log(`User ${userId} removed from waiting list at ${currentTime}`);\n\n  let adminResponse = '‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞';\n  try {\n    const waitData = $('Wait1').first().json;\n    adminResponse = waitData.response || waitData.message || waitData.text || adminResponse;\n  } catch (e) {\n    console.log('Cannot access Wait data:', e.message);\n  }\n\n  return [{\n    json: {\n      userId: userId,\n      status: 'completed',\n      timestamp: currentTime,\n      adminResponse: adminResponse\n    }\n  }];\n\n} catch (error) {\n  console.error('Error in Remove User from Waiting:', error);\n  return [{\n    json: {\n      error: error.message,\n      status: 'failed',\n      stack: error.stack\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5660,
        7060
      ],
      "id": "9361132b-e45f-4120-b578-6c2012016b3e",
      "name": "Remove User from Waiting1"
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏≠‡∏ö",
        "options": {}
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        -5960,
        7060
      ],
      "id": "dc4aa402-705b-4445-b8f5-f92eb865f442",
      "name": "Wait1",
      "webhookId": "a3ad52d2-8590-410f-a1d8-8dc89e56bd2f",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -5400,
        7060
      ],
      "id": "33257657-fff3-4d85-bcbd-a1352c35e21a",
      "name": "Clear sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1500,
        6980
      ],
      "id": "097dbe6f-ad44-44f1-8c32-930a29effc3c",
      "name": "Get row(s) in sheet2",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -6220,
        7060
      ],
      "id": "1452546e-29c7-4fe1-b766-fd634c005bd6",
      "name": "Append row in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get Conversation History1').item.json.flowDecision }}",
                    "rightValue": "first_greeting",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "35280fc8-aed7-472d-9a97-b875d3d69cbf"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "78409f79-3d13-4b2b-9808-a515d3a35c68",
                    "leftValue": "={{ $('Get Conversation History1').item.json.flowDecision }}",
                    "rightValue": "returning_greeting",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5e1f7234-d963-45a3-bc81-91d0bb095aed",
                    "leftValue": "={{ $('Get Conversation History1').item.json.flowDecision }}",
                    "rightValue": "simple_response",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4f5809f3-a033-4270-b1b5-6fe3d3b6ee5e",
                    "leftValue": "={{ $('Get Conversation History1').item.json.flowDecision }}",
                    "rightValue": "continue_conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf88376f-6117-45b7-ae0b-43f80bf4dfe3",
                    "leftValue": "={{ $('Get Conversation History1').item.json.flowDecision }}",
                    "rightValue": "new_question",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e50085e1-e092-4ada-b053-9df0ec1498a0",
                    "leftValue": "={{ $json.message }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -7220,
        6400
      ],
      "id": "2bf42e2b-ef27-490b-bd5c-e7c3546d7797",
      "name": "Switch1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Switch1').item.json.replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.output.issue\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1520,
        7600
      ],
      "id": "36bdc501-8a79-4523-8bde-a882a701457b",
      "name": "HTTP Request7",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "text": "={{ $json.chatInput }}",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        -1020,
        7760
      ],
      "id": "c5579c1c-0d5c-4f6f-8d28-880777994505",
      "name": "Notion",
      "credentials": {
        "notionApi": {
          "id": "IptNwQyRHEkhMtNf",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const userId = $('Edit Fields1').first().json.body?.events[0]?.source?.userId;\n  const currentMessage = $input.first().json.message.content\n  const replyToken = $('Edit Fields1').first().json.body?.events[0]?.replyToken;\n\n  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ userId ‡∏´‡∏£‡∏∑‡∏≠ currentMessage ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏´‡∏°\n  if (!userId || !currentMessage) {\n    throw new Error('Missing userId or currentMessage');\n  }\n\n  // ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏à‡∏≤‡∏Å Google Sheets\n  const conversationData = $('Get Conversation History Sheet1').items || [];\n  \n  // ‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤\n  const now = new Date();\n  const oneDayAgo = new Date(now.getTime() - (24 * 60 * 60 * 1000));\n  \n  const userHistory = conversationData.filter(item => {\n    const row = item.json || item;\n    if (!row.userId || !row.timestamp) return false;\n    \n    const messageTime = new Date(row.timestamp);\n    return row.userId === userId && messageTime > oneDayAgo;\n  }).sort((a, b) => new Date(a.timestamp || 0) - new Date(b.timestamp || 0));\n\n  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\n  const greetings = ['‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ', '‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ', 'hello', 'hi', '‡∏î‡∏µ‡∏à‡πâ‡∏≤', '‡πÑ‡∏Æ', '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö', '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞'];\n  const isGreeting = greetings.some(greeting => \n    currentMessage.toLowerCase().includes(greeting.toLowerCase())\n  );\n  \n  const simpleResponses = ['‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì', 'thank you', '‡πÇ‡∏≠‡πÄ‡∏Ñ', 'ok', '‡∏Ñ‡∏£‡∏±‡∏ö', '‡∏Ñ‡πà‡∏∞', '‡∏Ç‡∏≠‡∏ö‡πÉ‡∏à'];\n\n// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ currentMessage ‡∏°‡∏µ‡∏Ñ‡∏≥‡πÉ‡∏î‡πÉ‡∏ô simpleResponses ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  const isSimpleResponse = simpleResponses.some(word => \n        simpleResponses.some(response => currentMessage.toLowerCase().includes(response.toLowerCase()))\n);\n\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ \n  let conversationContext = \"\"; \n  if (userHistory.length > 0) { \n    const recentMessages = userHistory.slice(-6); // ‡πÄ‡∏≠‡∏≤ 6 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (3 ‡∏Ñ‡∏π‡πà‡∏™‡∏ô‡∏ó‡∏ô‡∏≤) \n    conversationContext = \"‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\\n\"; \n    recentMessages.forEach(item => { \n      const row = item.json || item; \n      conversationContext += `${row.role}: ${row.message}\\n`; \n    }); \n    conversationContext += `\\n‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${currentMessage}`; \n  }\n\n  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î flow ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ\n  let flowDecision = 'unknown';\n  let shouldUseRAG = false;\n  let shouldUseContinuation = false;\n  \n  if (isGreeting && userHistory.length === 0) {\n    // ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å\n    flowDecision = 'first_greeting';\n  } else if (isGreeting && userHistory.length > 0) {\n    // ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏Ñ‡∏∏‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n    flowDecision = 'returning_greeting';\n  } else if (isSimpleResponse) {\n    // ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ\n    flowDecision = 'simple_response';\n  } else if (userHistory.length > 0) {\n    // ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ - ‡πÉ‡∏ä‡πâ continuation\n    flowDecision = 'continue_conversation';\n    shouldUseContinuation = true;\n  } else {\n    // ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ - ‡πÉ‡∏ä‡πâ RAG\n    flowDecision = 'new_question';\n    shouldUseRAG = true;\n  }\n  \n  return [{\n    json: {\n      userId: userId,\n      currentMessage: currentMessage,  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç\n      replyToken: replyToken,\n      hasHistory: userHistory.length > 0,\n      historyCount: userHistory.length,\n      conversationContext: conversationContext,\n      isGreeting: isGreeting,\n      isSimpleResponse: isSimpleResponse,\n      flowDecision: flowDecision,\n      shouldUseRAG: shouldUseRAG,\n      shouldUseContinuation: shouldUseContinuation,\n      timestamp: now.toISOString(),\n      sessionId: `${userId}_${now.toISOString().split('T')[0]}`\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Get Conversation History:', error);\n  return [{\n    json: {\n      flowDecision: 'error',\n      error: error.message,\n      userId: '',\n      currentMessage: '',\n      hasHistory: false,\n      shouldUseRAG: true,\n      shouldUseContinuation: false\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -7960,
        6460
      ],
      "id": "db998857-b196-4f50-a4fa-257a3fd34bc7",
      "name": "Get Conversation History1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1586185798,
          "mode": "list",
          "cachedResultName": "n8n-sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=1586185798"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -8640,
        6460
      ],
      "id": "ef775938-a8c2-4540-b055-d8ef46639d9c",
      "name": "Get Conversation History Sheet1",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  \n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Get Conversation History\n  let contextData = {};\n  try {\n    contextData = $('Get Conversation History1').first().json;\n  } catch (e) {\n    console.log('Cannot access context data');\n  }\n  \n  const userId = contextData.userId || '';\n  const sessionId = contextData.sessionId || `${userId}_${new Date().toISOString().split('T')[0]}`;\n  const timestamp = new Date().toISOString();\n  \n  const records = [];\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á user\n  if (contextData.currentMessage) {\n    records.push({\n      userId: userId,\n      sessionId: sessionId,\n      role: 'user',\n      message: contextData.currentMessage,\n      timestamp: timestamp,\n      messageType: contextData.flowDecision || 'user_message'\n    });\n  }\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏≠‡∏á assistant\n  const assistantResponse = inputData.text || inputData.response || inputData.output || '‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';\n  records.push({\n    userId: userId,\n    sessionId: sessionId,\n    role: 'assistant',\n    message: assistantResponse,\n    timestamp: new Date(Date.now() + 1000).toISOString(),\n    messageType: inputData.messageType || 'assistant_response'\n  });\n  \n  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô text format ‡πÅ‡∏•‡∏∞ return ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á objects\n  return records.map(record => ({ text: JSON.stringify(record) }));\n  \n} catch (error) {\n  console.error('Error saving conversation history:', error);\n  return [{ text: 'Error occurred while saving conversation history' }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5020,
        6480
      ],
      "id": "49af1670-0fa9-4be0-a29c-30cc7199b707",
      "name": "Save to Conversation History1",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const conversationContext = inputData.conversationContext || '';\n  const currentMessage = inputData.currentMessage || '';\n  \n  if (!conversationContext) {\n    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ context ‡πÉ‡∏´‡πâ fallback ‡πÑ‡∏õ RAG\n    return [{\n      json: {\n        prompt: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ${currentMessage}`,\n        messageType: 'fallback_response'\n      }\n    }];\n  }\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á\n  const prompt = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI Assistant ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n\n${conversationContext}\n\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°\n- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏ã‡πâ‡∏≥\n- ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó\n- ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ \"‡∏Ñ‡πà‡∏∞\"\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö:`;\n  \n  return [{\n    json: {\n      prompt: prompt,\n      messageType: 'conversation_continue'\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      prompt: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ${$input.first().json.currentMessage || ''}`,\n      messageType: 'error_response'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6520,
        6240
      ],
      "id": "0a9ac63c-31d5-4611-b55c-62ea603b06ff",
      "name": "Code3"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const flowDecision = inputData.flowDecision;\n  \n  let responseText = '';\n  \n  switch(flowDecision) {\n    case 'first_greeting':\n      const greetingResponses = [\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏Ñ‡πà‡∏∞ üòä ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞',\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?'\n      ];\n      responseText = greetingResponses[Math.floor(Math.random() * greetingResponses.length)];\n      break;\n      \n    case 'returning_greeting':\n      const returningResponses = [\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡∏µ‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏î‡∏µ‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?'\n      ];\n      responseText = returningResponses[Math.floor(Math.random() * returningResponses.length)];\n      break;\n      \n    case 'simple_response':\n      const simpleResponses = [\n        '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üòä ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏ô‡∏∞‡∏Ñ‡∏∞',\n        '‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üôè'\n      ];\n      responseText = simpleResponses[Math.floor(Math.random() * simpleResponses.length)];\n      break;\n      \n    default:\n      responseText = '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?';\n  }\n  \n  return [{\n    json: {\n      text: responseText,\n      messageType: flowDecision,\n      shouldSaveHistory: true\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n      messageType: 'default',\n      shouldSaveHistory: true\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6520,
        6060
      ],
      "id": "f7542f31-5cc4-40c5-a3c3-d1d139a51b8c",
      "name": "Simple Response Generator1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const conversationContext = inputData.conversationContext || '';\n  const currentMessage = inputData.currentMessage || '';\n  \n  if (!conversationContext) {\n    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ context ‡πÉ‡∏´‡πâ fallback ‡πÑ‡∏õ RAG\n    return [{\n      json: {\n        response: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞`,\n        messageType: 'fallback_response'\n      }\n    }];\n  }\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á\n  const prompt = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI Assistant ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ \"‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó\" ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤\n\n${conversationContext}\n\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:\n- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°\n- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏ã‡πâ‡∏≥‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß\n- ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó\n- ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ \"‡∏Ñ‡πà‡∏∞\" ‡∏´‡∏£‡∏∑‡∏≠ \"‡∏Ñ‡∏£‡∏±‡∏ö\"\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏ñ‡∏≤‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö\n- ‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö:`;\n  \n  return [{\n    json: {\n      prompt: prompt,\n      messageType: 'conversation_continue',\n      contextLength: conversationContext.length\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      response: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞`,\n      messageType: 'error_response'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6400,
        7940
      ],
      "id": "52e398d5-3751-4fb2-a3f0-edfe5fb5a1da",
      "name": "Conversation Continuation1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  \n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Get Conversation History\n  let contextData = {};\n  try {\n    contextData = $('Get Conversation History1').first().json;\n  } catch (e) {\n    console.log('Cannot access context data');\n  }\n  \n  const userId = contextData.userId || '';\n  const sessionId = contextData.sessionId || `${userId}_${new Date().toISOString().split('T')[0]}`;\n  const timestamp = new Date().toISOString();\n  \n  const records = [];\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á user (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)\n  if (contextData.currentMessage && !inputData.skipUserMessage) {\n    records.push({\n      userId: userId,\n      sessionId: sessionId,\n      role: 'user',\n      message: contextData.currentMessage,\n      timestamp: timestamp,\n      messageType: contextData.flowDecision || 'user_message'\n    });\n  }\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏≠‡∏á assistant\n  const assistantResponse = inputData.text || inputData.response || inputData.output || '‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';\n  records.push({\n    userId: userId,\n    sessionId: sessionId,\n    role: 'assistant',\n    message: assistantResponse,\n    timestamp: new Date(Date.now() + 1000).toISOString(), // ‡πÄ‡∏û‡∏¥‡πà‡∏° 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏π‡∏Å\n    messageType: inputData.messageType || 'assistant_response'\n  });\n  \n  console.log('Saving conversation records:', records);\n  \n  return records.map(record => ({ json: record }));\n  \n} catch (error) {\n  console.error('Error saving conversation history:', error);\n  return [{\n    json: {\n      error: error.message,\n      userId: '',\n      sessionId: '',\n      role: 'error',\n      message: 'Failed to save conversation',\n      timestamp: new Date().toISOString(),\n      messageType: 'error'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5780,
        8040
      ],
      "id": "edb30cdd-9cfc-4407-8fb6-44f265499597",
      "name": "Save Conversation1"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -6100,
        8020
      ],
      "id": "5c5bacd6-61b8-41ca-b211-756df78c3e7a",
      "name": "Get row(s) in sheet3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const extractedData = $('Information Extractor1').item.json.output;\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n  if (!extractedData) {\n    console.log('No extracted data found');\n    return [{\n      json: {\n        text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n      }\n    }];\n  }\n  \n  const name = extractedData.name || '';\n  const issue = extractedData.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\n  let userReply = name ? \n    `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${name}\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:\\n‡πÇ‡∏ó‡∏£: 02-222-2222  ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞` :\n    `‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222 ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞`;\n  \n  return [{\n    json: {\n      text: userReply\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Admin Alert Code:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5660,
        6840
      ],
      "id": "a60aee8c-04f2-472d-b697-e74e1eb20fcd",
      "name": "Admin Alert Code1"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "GPT-4"
        },
        "messages": {
          "values": [
            {
              "content": "=‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏Å‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏ß‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ {{ $('Edit Fields1').item.json.body.events[0].message.text }}\n\n‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ú‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏õ‡∏£‡∏ò‡πÇ‡∏¢‡∏Ñ"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -8360,
        6460
      ],
      "id": "f9091231-d4e4-4867-9087-3a8581df4aa4",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î 1\n  return [{\n    json: {\n      text: \"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Ñ‡πà‡∏∞\",\n      userId: $json.userId,\n      message: $json.message,\n      replyToken: $json.replyToken\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Send Notification Before Admin:', error);\n  return [{\n    json: {\n      text: \"‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Ñ‡πà‡∏∞\",\n      userId: $json.userId,\n      message: $json.message,\n      replyToken: $json.replyToken\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -740,
        13760
      ],
      "id": "89022ef5-b1ee-4ff6-be60-ed584fee055e",
      "name": "Send Notification Before Admin"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $json.replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        13760
      ],
      "id": "64ee60c7-4328-4db1-bbbd-cd1fe9b85945",
      "name": "HTTP Send Notification",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/plain"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1960,
        13040
      ],
      "id": "cdee8c36-a707-4300-9246-8903bb0e8112",
      "name": "Respond to Webhook",
      "notesInFlow": false
    },
    {
      "parameters": {
        "jsCode": "try {\n  const extractedData = $('Information Extractor').item.json.output;\n  \n\n  const name = extractedData.name || '';\n  const issue = extractedData.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\n  let userReply = name ? \n    `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${name}\\n‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"  ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:\\n‡πÇ‡∏ó‡∏£: 02-222-2222  ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞` :\n    `‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö \"${issue}\"  ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222  ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞`;\n  \n  return [{\n    json: {\n      text: userReply\n    }\n  }];\n  \n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        13020
      ],
      "id": "7de2a1b8-6e55-4394-8a2f-aa7783a394d0",
      "name": "Admin Alert Code"
    },
    {
      "parameters": {
        "text": "={{ $json.message }}",
        "attributes": {
          "attributes": [
            {
              "name": "name",
              "description": "‡∏ä‡∏∑‡πà‡∏≠ ,  Name"
            },
            {
              "name": "phone",
              "description": "‡πÄ‡∏ö‡∏≠‡∏£‡πå"
            },
            {
              "name": "issue",
              "description": "‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏à‡∏∞‡∏ó‡∏µ‡πà‡∏™‡∏Å‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÇ‡∏î‡∏¢‡∏Ñ‡∏≥‡∏ô‡∏∂‡∏á‡∏ñ‡∏∂‡∏á‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡∏Å‡∏±‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -760,
        13020
      ],
      "id": "78f90164-66a4-45b3-913a-c453588da074",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output.issue || $json.message || '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' }}",
        "options": {
          "systemPromptTemplate": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÇ‡∏î‡∏¢‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÉ‡∏´‡πâ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô\\n\\n‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Context ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ï‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡πâ‡∏ô ‡πÇ‡∏î‡∏¢‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡∏á‡πà‡∏≤‡∏¢\\n‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Context ‡∏´‡∏£‡∏∑‡∏≠ Context ‡∏ß‡πà‡∏≤‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ \"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\"\\n‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ \"‡∏Ñ‡πà‡∏∞\"\\n\\nContext: {context}\\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "typeVersion": 1.6,
      "position": [
        200,
        12300
      ],
      "id": "80faf533-0cdd-4e5f-9bf1-394509db0356",
      "name": "Question and Answer Chain"
    },
    {
      "parameters": {
        "topK": 7
      },
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "typeVersion": 1,
      "position": [
        280,
        12520
      ],
      "id": "722db0cd-48f8-472b-939e-2f52e00b3194",
      "name": "Vector Store Retriever1",
      "notesInFlow": false
    },
    {
      "parameters": {
        "qdrantCollection": {
          "__rl": true,
          "value": "my_collection55",
          "mode": ""
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreQdrant",
      "typeVersion": 1.3,
      "position": [
        300,
        12680
      ],
      "id": "2930fd7b-c059-40a2-8274-7476cda4fcf7",
      "name": "Qdrant Vector Store1",
      "credentials": {
        "qdrantApi": {
          "id": "rRKHy3jO1VHzH0Xr",
          "name": "QdrantApi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        12820
      ],
      "id": "44bc83fb-afee-4ec1-a098-e5a9320170f4",
      "name": "Embeddings OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        120,
        12520
      ],
      "id": "e2d073f3-102d-40d0-9fbd-479854cf4995",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $json.output.issue || $json.message || '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ' }}",
        "categories": {
          "categories": [
            {
              "category": "‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°",
              "description": " ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö pos, ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠"
            },
            {
              "category": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£",
              "description": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏°‡∏µ"
            },
            {
              "category": "‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤",
              "description": "‡πÅ‡∏à‡πâ‡∏á‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠"
            },
            {
              "category": "‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤",
              "description": "‡∏£‡∏≤‡∏Ñ‡∏≤, ‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏£, ‡∏Å‡∏µ‡πà‡∏ö‡∏≤‡∏ó, ‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢"
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "=‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà\n",
          "enableAutoFixing": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "typeVersion": 1.1,
      "position": [
        -360,
        13000
      ],
      "id": "496e24ef-d491-4d8f-993a-1d24f0f33313",
      "name": "Text Classifier1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1",
          "mode": "list",
          "cachedResultName": "gpt-4.1"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -560,
        13260
      ],
      "id": "fd092979-6a82-4ace-b1b1-9cbc094cf082",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• response ‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏ô‡∏î‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤\n  const inputData = $input.first().json;\n  console.log('Code input data:', JSON.stringify(inputData, null, 2));\n  \n  // ‡∏•‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢ property ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ\n  const userReply = inputData.response || inputData.text || inputData.output || inputData.answer || '';\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (!userReply || userReply.trim() === '') {\n    console.log('No response data found, using default message');\n    return [{\n      json: {\n        text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n      }\n    }];\n  }\n  \n  console.log('Code reply:', userReply);\n  \n  return [{\n    json: {\n      text: userReply\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Code:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        620,
        12300
      ],
      "id": "3d4cef8c-6554-41e8-8df9-b9f29d018d56",
      "name": "Code"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text || '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞'\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1480,
        13040
      ],
      "id": "1fe4c5f7-30a3-4ed3-829a-88fb5f0e3602",
      "name": "HTTP Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tyreis88",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3180,
        13020
      ],
      "id": "49a3f1d1-dd9c-426c-b9b0-b4cb95a916e4",
      "name": "Webhook",
      "webhookId": "10a617e8-a0f3-401f-be76-79e386e0e4b8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a027155a-071f-4e2c-9905-1b41abea507c",
              "name": "body.events[0].replyToken",
              "value": "={{ $('Webhook').item.json.body.events[0].replyToken }}",
              "type": "string"
            },
            {
              "id": "812a988a-0520-46ed-af6f-0a431814a1bd",
              "name": "body.events[0].message.text",
              "value": "={{ $json.body.events[0].message.text }}",
              "type": "string"
            },
            {
              "id": "01feb716-a36a-4d7d-ac12-19bd0bb4b796",
              "name": "body.events[0].source.userId",
              "value": "={{ $json.body.events[0].source.userId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2880,
        13020
      ],
      "id": "95464d57-acda-4559-b2de-e14738a47bef",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4360,
        14620
      ],
      "id": "7bc53bad-be39-4d12-a0ad-0c0522b4986f",
      "name": "HTTP Request3",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        5000,
        13960
      ],
      "id": "b619272c-83dd-4a9e-933a-add84853477c",
      "name": "HTTP Request8",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "653e6047-eb03-4452-9677-27a668dc86c5",
              "leftValue": "={{ $json.status }}",
              "rightValue": "available",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        5240,
        14280
      ],
      "id": "e0f00e43-8faf-4af4-8d0a-0a9cbd3c5341",
      "name": "If1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô\n  const webhookData = $('Edit Fields').item.json;\n  const userId = $('Edit Fields').first().json.body.events[0].source.userId;\n  const message = $('Edit Fields').first().json.body.events[0].message.text;\n  const replyToken = $('Edit Fields').first().json.body.events[0].replyToken;\n  const flowDecision = $input.first().json.flowDecision || 'default'; // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ default ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ flowDecision\n\n  console.log('Debug - Webhook data:', JSON.stringify(webhookData, null, 2));\n  console.log('Debug - userId extracted:', userId);\n  console.log('Debug - message extracted:', message);\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  if (!userId) {\n    console.log('No userId found in webhook data');\n    return [{\n      json: {\n        status: 'error',\n        message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ',\n        canProceed: false,\n        debug: {\n          webhookData: webhookData,\n          extractedUserId: userId\n        }\n      }\n    }];\n  }\n\n  if (!message || message.trim() === '') {\n    console.log('Empty message received');\n    return [{\n      json: {\n        status: 'error',\n        userId: userId,\n        message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ñ‡πà‡∏∞',\n        canProceed: false,\n        replyToken: replyToken\n      }\n    }];\n  }\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©\n  const lowerMessage = message.toLowerCase().trim();\n  if (lowerMessage === '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å' || lowerMessage === 'cancel') {\n    return [{\n      json: {\n        status: 'cancelled',\n        userId: userId,\n        message: '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏Ñ‡πà‡∏∞',\n        canProceed: false,\n        replyToken: replyToken\n      }\n    }];\n  }\n\n  // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á \"1\" ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ session\n  if (message.trim() === '1') {\n    return [{\n      json: {\n        status: 'skip_session_check',\n        userId: userId,\n        message: message,\n        canProceed: true,\n        replyToken: replyToken,\n        isMenuCommand: true\n      }\n    }];\n  }\n\n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤ user ‡∏°‡∏µ active session ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏à‡∏≤‡∏Å Google Sheets\n  let sheetsData = [];\n\n  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢\n  try {\n    const sheetsResponse = $('Get row(s) in sheet');\n    console.log('Sheets response:', JSON.stringify(sheetsResponse, null, 2));\n\n    // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ items ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n    if (sheetsResponse && sheetsResponse.items) {\n      sheetsData = sheetsResponse.items;\n    } else if (sheetsResponse && sheetsResponse.item) {\n      sheetsData = [sheetsResponse.item];\n    } else {\n      sheetsData = [];\n    }\n\n    console.log('Processed sheets data length:', sheetsData.length);\n\n  } catch (sheetsError) {\n    console.log('Error accessing sheets data:', sheetsError.message);\n    sheetsData = [];\n  }\n\n  let isWaiting = false;\n  let waitingEntry = null;\n\n  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô Google Sheets ‡πÄ‡∏•‡∏¢ ‡πÉ‡∏´‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô available\n  if (sheetsData.length === 0) {\n    console.log(`No data in Google Sheets - User ${userId} can proceed`);\n    return [{\n      json: {\n        status: 'available',\n        userId: userId,\n        message: message,\n        canProceed: true,\n        replyToken: replyToken,\n        timestamp: Date.now(),\n        note: 'No existing sessions found',\n        flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n      }\n    }];\n  }\n\n  // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô error ‡∏≠‡∏≠‡∏Å ‡πÅ‡∏•‡∏∞‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ waiting\n  const validData = sheetsData.filter(item => {\n    const row = item.json || item;\n    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà error\n    return row && typeof row === 'object' && !row.error && row.userId;\n  });\n\n  console.log('Valid data after filtering:', validData.length);\n\n  if (validData.length > 0) {\n    waitingEntry = validData.find(item => {\n      const row = item.json || item;\n      return row.userId === userId && row.status === 'waiting';\n    });\n    isWaiting = !!waitingEntry;\n  }\n\n  if (isWaiting) {\n    return [{\n      json: {\n        status: 'waiting',\n        userId: userId,\n        message: '‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏Ñ‡πà‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏û‡∏¥‡∏°‡∏û‡πå \"‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å\"',\n        canProceed: false,\n        replyToken: replyToken,\n        waitingSince: (waitingEntry.json || waitingEntry).timestamp || '‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡πÄ‡∏ß‡∏•‡∏≤',\n        flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n      }\n    }];\n  }\n\n  // ‡∏ñ‡πâ‡∏≤‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥ ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠\n  console.log(`User ${userId} can proceed with message: ${message}`);\n\n  return [{\n    json: {\n      status: 'available',\n      userId: userId,\n      message: message,\n      canProceed: true,\n      replyToken: replyToken,\n      timestamp: Date.now(),\n      flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå\n    }\n  }];\n\n} catch (error) {\n  console.error('Error in Check User Session:', error);\n  return [{\n    json: {\n      status: 'error',\n      message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞',\n      canProceed: false,\n      error: error.message,\n      stack: error.stack,\n      flowDecision: flowDecision // ‡πÄ‡∏û‡∏¥‡πà‡∏° flowDecision ‡πÉ‡∏ô‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1580,
        13020
      ],
      "id": "0b0a9c1f-adf4-40f7-9a43-1b1b3e0cb4ad",
      "name": "Check User Session"
    },
    {
      "parameters": {
        "jsCode": "// 1. ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç Code ‡πÉ‡∏ô \"Add User to Waiting\" node:\ntry {\n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Check User Session ‡πÅ‡∏ó‡∏ô\n  const sessionData = $('Check User Session').first().json;\n  const userId = $input.first().json.userId\n  const message = $input.first().json.message\n  \n  console.log('Debug - userId found:', userId);\n  console.log('Debug - message found:', message);\n  \n  if (!userId) {\n    console.log('No userId provided for waiting session');\n    return [{\n      json: {\n        error: 'No userId provided',\n        status: 'failed'\n      }\n    }];\n  }\n  \n  // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° user ‡πÄ‡∏Ç‡πâ‡∏≤ waiting list\n  const currentTime = new Date().toISOString();\n  \n  console.log(`User ${userId} added to waiting list at ${currentTime}`);\n  \n  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google Sheets\n  return [{\n    json: {\n      userId: userId,\n      status: 'waiting',\n      timestamp: currentTime,\n      message: message || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏'\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Add User to Waiting:', error);\n  return [{\n    json: {\n      error: error.message,\n      status: 'failed',\n      stack: error.stack\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -220,
        13760
      ],
      "id": "2992017a-cb31-4d3b-8ff5-fae90f9d1945",
      "name": "Add User to Waiting"
    },
    {
      "parameters": {
        "jsCode": "try {\n  let inputData = $input.length > 0 ? $input.first().json : {};\n  \n  let userId = $('Webhook').first().json.body.events[0].source.userId\n\n  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ userId ‡πÉ‡∏ô input ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å Check User Session\n  if (!userId) {\n    try {\n      const sessionData = $('Check User Session').first().json;\n      userId = sessionData.userId;\n    } catch (e) {\n      console.log('Cannot retrieve userId from Check User Session');\n    }\n  }\n\n  if (!userId) {\n    console.log('No userId provided for removal from waiting');\n    return [{\n      json: {\n        error: 'No userId provided',\n        status: 'failed'\n      }\n    }];\n  }\n\n  const currentTime = new Date().toISOString();\n  console.log(`User ${userId} removed from waiting list at ${currentTime}`);\n\n  let adminResponse = '‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞';\n  try {\n    const waitData = $('Wait').first().json;\n    adminResponse = waitData.response || waitData.message || waitData.text || adminResponse;\n  } catch (e) {\n    console.log('Cannot access Wait data:', e.message);\n  }\n\n  return [{\n    json: {\n      userId: userId,\n      status: 'completed',\n      timestamp: currentTime,\n      adminResponse: adminResponse\n    }\n  }];\n\n} catch (error) {\n  console.error('Error in Remove User from Waiting:', error);\n  return [{\n    json: {\n      error: error.message,\n      status: 'failed',\n      stack: error.stack\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        640,
        13760
      ],
      "id": "8aaa8332-1ac5-4809-ac3b-873f3b038ad9",
      "name": "Remove User from Waiting"
    },
    {
      "parameters": {
        "resume": "form",
        "formTitle": "‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ï‡∏≠‡∏ö",
        "options": {}
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        340,
        13760
      ],
      "id": "0cc0b746-d6a7-45ae-9d68-a5563ae1df2c",
      "name": "Wait",
      "webhookId": "a3ad52d2-8590-410f-a1d8-8dc89e56bd2f",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "operation": "clear",
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        900,
        13760
      ],
      "id": "db5b1266-d3d2-4187-ab31-e58737277f51",
      "name": "Clear sheet1",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        4540,
        13540
      ],
      "id": "3216ccc9-abef-45d0-b60e-26f4e0ed227c",
      "name": "Get row(s) in sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "‡∏ä‡∏µ‡∏ï1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=0"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "row_number"
          ],
          "schema": [
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        80,
        13760
      ],
      "id": "795b831e-9ece-4c16-86ac-5786d7a97d02",
      "name": "Append row in sheet1",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Get Conversation History').item.json.flowDecision }}",
                    "rightValue": "first_greeting",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "35280fc8-aed7-472d-9a97-b875d3d69cbf"
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "78409f79-3d13-4b2b-9808-a515d3a35c68",
                    "leftValue": "={{ $('Get Conversation History').item.json.flowDecision }}",
                    "rightValue": "returning_greeting",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "5e1f7234-d963-45a3-bc81-91d0bb095aed",
                    "leftValue": "={{ $('Get Conversation History').item.json.flowDecision }}",
                    "rightValue": "simple_response",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4f5809f3-a033-4270-b1b5-6fe3d3b6ee5e",
                    "leftValue": "={{ $('Get Conversation History').item.json.flowDecision }}",
                    "rightValue": "continue_conversation",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cf88376f-6117-45b7-ae0b-43f80bf4dfe3",
                    "leftValue": "={{ $('Get Conversation History').item.json.flowDecision }}",
                    "rightValue": "new_question",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e50085e1-e092-4ada-b053-9df0ec1498a0",
                    "leftValue": "={{ $json.message }}",
                    "rightValue": "1",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -1180,
        12960
      ],
      "id": "078a76e0-cd08-4f42-8777-d88bbc5027af",
      "name": "Switch"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Switch').item.json.replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.output.issue\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4520,
        14160
      ],
      "id": "0d0687ca-3aad-44f1-b1b4-bcf00b63a270",
      "name": "HTTP Request9",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "text": "={{ $json.chatInput }}",
        "returnAll": true,
        "options": {}
      },
      "type": "n8n-nodes-base.notionTool",
      "typeVersion": 2.2,
      "position": [
        5020,
        14320
      ],
      "id": "9f6dee6a-d627-4985-998e-91722a9af622",
      "name": "Notion1",
      "credentials": {
        "notionApi": {
          "id": "IptNwQyRHEkhMtNf",
          "name": "Notion account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const userId = $('Edit Fields').first().json.body?.events[0]?.source?.userId;\n  const currentMessage = $input.first().json.message.content\n  const replyToken = $('Edit Fields').first().json.body?.events[0]?.replyToken;\n\n  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ userId ‡∏´‡∏£‡∏∑‡∏≠ currentMessage ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÑ‡∏´‡∏°\n  if (!userId || !currentMessage) {\n    throw new Error('Missing userId or currentMessage');\n  }\n\n  // ‡∏î‡∏∂‡∏á‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏à‡∏≤‡∏Å Google Sheets\n  const conversationData = $('Get Conversation History Sheet').items || [];\n  \n  // ‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á user ‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤\n  const now = new Date();\n  const oneDayAgo = new Date(now.getTime() - (24 * 60 * 60 * 1000));\n  \n  const userHistory = conversationData.filter(item => {\n    const row = item.json || item;\n    if (!row.userId || !row.timestamp) return false;\n    \n    const messageTime = new Date(row.timestamp);\n    return row.userId === userId && messageTime > oneDayAgo;\n  }).sort((a, b) => new Date(a.timestamp || 0) - new Date(b.timestamp || 0));\n\n  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°\n  const greetings = ['‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ', '‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ', 'hello', 'hi', '‡∏î‡∏µ‡∏à‡πâ‡∏≤', '‡πÑ‡∏Æ', '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö', '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞'];\n  const isGreeting = greetings.some(greeting => \n    currentMessage.toLowerCase().includes(greeting.toLowerCase())\n  );\n  \n  const simpleResponses = ['‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì', 'thank you', '‡πÇ‡∏≠‡πÄ‡∏Ñ', 'ok', '‡∏Ñ‡∏£‡∏±‡∏ö', '‡∏Ñ‡πà‡∏∞', '‡∏Ç‡∏≠‡∏ö‡πÉ‡∏à'];\n\n// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ currentMessage ‡∏°‡∏µ‡∏Ñ‡∏≥‡πÉ‡∏î‡πÉ‡∏ô simpleResponses ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\n  const isSimpleResponse = simpleResponses.some(word => \n        simpleResponses.some(response => currentMessage.toLowerCase().includes(response.toLowerCase()))\n);\n\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ \n  let conversationContext = \"\"; \n  if (userHistory.length > 0) { \n    const recentMessages = userHistory.slice(-6); // ‡πÄ‡∏≠‡∏≤ 6 ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (3 ‡∏Ñ‡∏π‡πà‡∏™‡∏ô‡∏ó‡∏ô‡∏≤) \n    conversationContext = \"‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:\\n\"; \n    recentMessages.forEach(item => { \n      const row = item.json || item; \n      conversationContext += `${row.role}: ${row.message}\\n`; \n    }); \n    conversationContext += `\\n‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${currentMessage}`; \n  }\n\n  // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î flow ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏ä‡πâ\n  let flowDecision = 'unknown';\n  let shouldUseRAG = false;\n  let shouldUseContinuation = false;\n  \n  if (isGreeting && userHistory.length === 0) {\n    // ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å\n    flowDecision = 'first_greeting';\n  } else if (isGreeting && userHistory.length > 0) {\n    // ‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏Ñ‡∏∏‡∏¢‡πÅ‡∏•‡πâ‡∏ß\n    flowDecision = 'returning_greeting';\n  } else if (isSimpleResponse) {\n    // ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÜ\n    flowDecision = 'simple_response';\n  } else if (userHistory.length > 0) {\n    // ‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ - ‡πÉ‡∏ä‡πâ continuation\n    flowDecision = 'continue_conversation';\n    shouldUseContinuation = true;\n  } else {\n    // ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥ - ‡πÉ‡∏ä‡πâ RAG\n    flowDecision = 'new_question';\n    shouldUseRAG = true;\n  }\n  \n  return [{\n    json: {\n      userId: userId,\n      currentMessage: currentMessage,  // ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç\n      replyToken: replyToken,\n      hasHistory: userHistory.length > 0,\n      historyCount: userHistory.length,\n      conversationContext: conversationContext,\n      isGreeting: isGreeting,\n      isSimpleResponse: isSimpleResponse,\n      flowDecision: flowDecision,\n      shouldUseRAG: shouldUseRAG,\n      shouldUseContinuation: shouldUseContinuation,\n      timestamp: now.toISOString(),\n      sessionId: `${userId}_${now.toISOString().split('T')[0]}`\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Get Conversation History:', error);\n  return [{\n    json: {\n      flowDecision: 'error',\n      error: error.message,\n      userId: '',\n      currentMessage: '',\n      hasHistory: false,\n      shouldUseRAG: true,\n      shouldUseContinuation: false\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1920,
        13020
      ],
      "id": "f0f050e2-729a-48b9-b252-06c0dcd0ea37",
      "name": "Get Conversation History"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1586185798,
          "mode": "list",
          "cachedResultName": "n8n-sheet",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk/edit#gid=1586185798"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -2600,
        13020
      ],
      "id": "8739b9bf-2893-457b-8b5a-672a30faed5e",
      "name": "Get Conversation History Sheet",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  \n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Get Conversation History\n  let contextData = {};\n  try {\n    contextData = $('Get Conversation History').first().json;\n  } catch (e) {\n    console.log('Cannot access context data');\n  }\n  \n  const userId = contextData.userId || '';\n  const sessionId = contextData.sessionId || `${userId}_${new Date().toISOString().split('T')[0]}`;\n  const timestamp = new Date().toISOString();\n  \n  const records = [];\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á user\n  if (contextData.currentMessage) {\n    records.push({\n      userId: userId,\n      sessionId: sessionId,\n      role: 'user',\n      message: contextData.currentMessage,\n      timestamp: timestamp,\n      messageType: contextData.flowDecision || 'user_message'\n    });\n  }\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏≠‡∏á assistant\n  const assistantResponse = inputData.text || inputData.response || inputData.output || '‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';\n  records.push({\n    userId: userId,\n    sessionId: sessionId,\n    role: 'assistant',\n    message: assistantResponse,\n    timestamp: new Date(Date.now() + 1000).toISOString(),\n    messageType: inputData.messageType || 'assistant_response'\n  });\n  \n  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô text format ‡πÅ‡∏•‡∏∞ return ‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á objects\n  return records.map(record => ({ text: JSON.stringify(record) }));\n  \n} catch (error) {\n  console.error('Error saving conversation history:', error);\n  return [{ text: 'Error occurred while saving conversation history' }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1020,
        13040
      ],
      "id": "ae410b63-24e7-4cba-b02c-7577b8b73ba5",
      "name": "Save to Conversation History",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const conversationContext = inputData.conversationContext || '';\n  const currentMessage = inputData.currentMessage || '';\n  \n  if (!conversationContext) {\n    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ context ‡πÉ‡∏´‡πâ fallback ‡πÑ‡∏õ RAG\n    return [{\n      json: {\n        prompt: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ${currentMessage}`,\n        messageType: 'fallback_response'\n      }\n    }];\n  }\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á\n  const prompt = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI Assistant ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n\n${conversationContext}\n\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:\n- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°\n- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏ã‡πâ‡∏≥\n- ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó\n- ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ \"‡∏Ñ‡πà‡∏∞\"\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö:`;\n  \n  return [{\n    json: {\n      prompt: prompt,\n      messageType: 'conversation_continue'\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      prompt: `‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: ${$input.first().json.currentMessage || ''}`,\n      messageType: 'error_response'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -480,
        12800
      ],
      "id": "c692658b-5f9f-4213-a26d-f67a38cbafcb",
      "name": "Code4"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const flowDecision = inputData.flowDecision;\n  \n  let responseText = '';\n  \n  switch(flowDecision) {\n    case 'first_greeting':\n      const greetingResponses = [\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤‡∏Ñ‡πà‡∏∞ üòä ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏´‡∏ß‡∏±‡∏î‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏î‡∏¥‡∏â‡∏±‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∞',\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏π‡πâ‡∏à‡∏±‡∏Å‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?'\n      ];\n      responseText = greetingResponses[Math.floor(Math.random() * greetingResponses.length)];\n      break;\n      \n    case 'returning_greeting':\n      const returningResponses = [\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡∏≠‡∏µ‡∏Å‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞! ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞! ‡∏î‡∏µ‡πÉ‡∏à‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?'\n      ];\n      responseText = returningResponses[Math.floor(Math.random() * returningResponses.length)];\n      break;\n      \n    case 'simple_response':\n      const simpleResponses = [\n        '‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üòä ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏™‡∏°‡∏≠‡∏ô‡∏∞‡∏Ñ‡∏∞',\n        '‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n        '‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ üôè'\n      ];\n      responseText = simpleResponses[Math.floor(Math.random() * simpleResponses.length)];\n      break;\n      \n    default:\n      responseText = '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?';\n  }\n  \n  return [{\n    json: {\n      text: responseText,\n      messageType: flowDecision,\n      shouldSaveHistory: true\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      text: '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡πà‡∏∞ ‡∏°‡∏µ‡∏≠‡∏∞‡πÑ‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏°‡∏±‡πâ‡∏¢‡∏Ñ‡∏∞?',\n      messageType: 'default',\n      shouldSaveHistory: true\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -480,
        12620
      ],
      "id": "2722c0dc-050a-4c50-8f92-b0ee86256d48",
      "name": "Simple Response Generator"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const conversationContext = inputData.conversationContext || '';\n  const currentMessage = inputData.currentMessage || '';\n  \n  if (!conversationContext) {\n    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ context ‡πÉ‡∏´‡πâ fallback ‡πÑ‡∏õ RAG\n    return [{\n      json: {\n        response: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞`,\n        messageType: 'fallback_response'\n      }\n    }];\n  }\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á\n  const prompt = `‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô AI Assistant ‡∏ó‡∏µ‡πà‡∏ä‡∏∑‡πà‡∏≠ \"‡∏ô‡πâ‡∏≠‡∏á‡∏ö‡∏≠‡∏ó\" ‡∏ó‡∏µ‡πà‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤\n‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≠‡∏ö‡πÇ‡∏î‡∏¢‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏£‡∏¥‡∏ö‡∏ó‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤\n\n${conversationContext}\n\n‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö:\n- ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°\n- ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡∏ã‡πâ‡∏≥‡∏ñ‡πâ‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏ó‡∏±‡∏Å‡∏ó‡∏≤‡∏¢‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß\n- ‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏ö‡∏£‡∏¥‡∏ö‡∏ó\n- ‡∏ï‡∏≠‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏î‡πâ‡∏ß‡∏¢ \"‡∏Ñ‡πà‡∏∞\" ‡∏´‡∏£‡∏∑‡∏≠ \"‡∏Ñ‡∏£‡∏±‡∏ö\"\n- ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏´‡πâ‡∏ñ‡∏≤‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö\n- ‡∏ï‡∏≠‡∏ö‡∏™‡∏±‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏∞‡∏ä‡∏±‡∏ö\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö:`;\n  \n  return [{\n    json: {\n      prompt: prompt,\n      messageType: 'conversation_continue',\n      contextLength: conversationContext.length\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      response: `‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞`,\n      messageType: 'error_response'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -360,
        14500
      ],
      "id": "73a3b43b-cdc7-4eca-8df7-b8893ab99d05",
      "name": "Conversation Continuation"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  \n  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Get Conversation History\n  let contextData = {};\n  try {\n    contextData = $('Get Conversation History').first().json;\n  } catch (e) {\n    console.log('Cannot access context data');\n  }\n  \n  const userId = contextData.userId || '';\n  const sessionId = contextData.sessionId || `${userId}_${new Date().toISOString().split('T')[0]}`;\n  const timestamp = new Date().toISOString();\n  \n  const records = [];\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á user (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)\n  if (contextData.currentMessage && !inputData.skipUserMessage) {\n    records.push({\n      userId: userId,\n      sessionId: sessionId,\n      role: 'user',\n      message: contextData.currentMessage,\n      timestamp: timestamp,\n      messageType: contextData.flowDecision || 'user_message'\n    });\n  }\n  \n  // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ç‡∏≠‡∏á assistant\n  const assistantResponse = inputData.text || inputData.response || inputData.output || '‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';\n  records.push({\n    userId: userId,\n    sessionId: sessionId,\n    role: 'assistant',\n    message: assistantResponse,\n    timestamp: new Date(Date.now() + 1000).toISOString(), // ‡πÄ‡∏û‡∏¥‡πà‡∏° 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ñ‡∏π‡∏Å\n    messageType: inputData.messageType || 'assistant_response'\n  });\n  \n  console.log('Saving conversation records:', records);\n  \n  return records.map(record => ({ json: record }));\n  \n} catch (error) {\n  console.error('Error saving conversation history:', error);\n  return [{\n    json: {\n      error: error.message,\n      userId: '',\n      sessionId: '',\n      role: 'error',\n      message: 'Failed to save conversation',\n      timestamp: new Date().toISOString(),\n      messageType: 'error'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        260,
        14600
      ],
      "id": "179ca2a5-17bc-4e32-8c8e-0d18071f6d24",
      "name": "Save Conversation"
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "mode": "list",
          "value": ""
        },
        "sheetName": {
          "__rl": true,
          "mode": "list",
          "value": ""
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -60,
        14580
      ],
      "id": "759e3bf5-8506-49fd-a12c-385fbeba1cea",
      "name": "Get row(s) in sheet4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const extractedData = $('Information Extractor').item.json.output;\n  \n  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô\n  if (!extractedData) {\n    console.log('No extracted data found');\n    return [{\n      json: {\n        text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n      }\n    }];\n  }\n  \n  const name = extractedData.name || '';\n  const issue = extractedData.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';\n  \n  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ\n  let userReply = name ? \n    `‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì ${name}\\n‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°1,xxx,xxx‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°\\n‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á  ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞` :\n    `‡∏£‡∏≤‡∏Ñ‡∏≤‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°1,xxx,xxx‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡∏°‡∏á‡∏≤‡∏ô‡∏à‡∏∞‡∏™‡πà‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏ô‡∏≠‡∏£‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÉ‡∏´‡πâ‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡πà‡∏∞ ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞`;\n  \n  return [{\n    json: {\n      text: userReply\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Admin Alert Code:', error);\n  return [{\n    json: {\n      text: \"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞\"\n    }\n  }];\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        13240
      ],
      "id": "2376962e-6561-4ab2-a601-4488f7eaa376",
      "name": "Admin Alert Code2"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4",
          "mode": "list",
          "cachedResultName": "GPT-4"
        },
        "messages": {
          "values": [
            {
              "content": "=‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡∏™‡∏∞‡∏Å‡∏î‡πÅ‡∏•‡∏∞‡πÑ‡∏ß‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏µ‡πâ {{ $('Edit Fields').item.json.body.events[0].message.text }}\n\n‡πÇ‡∏î‡∏¢‡πÉ‡∏´‡πâ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ú‡∏¥‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏´‡πâ‡∏≤‡∏°‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏õ‡∏£‡∏ò‡πÇ‡∏¢‡∏Ñ"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -2320,
        13020
      ],
      "id": "c6e14d14-179b-43d0-bb04-4044ba57f535",
      "name": "Message a model1",
      "credentials": {
        "openAiApi": {
          "id": "2RHOyXm2TG8WDZok",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "genopatiparn@gmail.com",
        "subject": "error",
        "emailType": "text",
        "message": "=error :{{ $json.error }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        800,
        13320
      ],
      "id": "c01a1f91-6a84-4856-90ac-d23130c7bcb2",
      "name": "Send a message2",
      "webhookId": "595271a5-849d-44cd-bb33-b451cec13d0f",
      "alwaysOutputData": true,
      "credentials": {
        "gmailOAuth2": {
          "id": "LpylCWZq80LRwVTQ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.errorTrigger",
      "typeVersion": 1,
      "position": [
        1460,
        13540
      ],
      "id": "1bddeeab-50d4-4132-9cfb-ccb82ace091a",
      "name": "Error Trigger",
      "disabled": true
    }
  ],
  "pinData": {},
  "connections": {
    "Admin Alert Code4": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor1": {
      "main": [
        [
          {
            "node": "Text Classifier",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Question and Answer Chain1": {
      "main": [
        [
          {
            "node": "Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier": {
      "main": [
        [
          {
            "node": "Question and Answer Chain1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Alert Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Alert Code5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Alert Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Information Extractor1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request4": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Get Conversation History Sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin Alert Code5": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Session1": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add User to Waiting1": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove User from Waiting1": {
      "main": [
        [
          {
            "node": "Clear sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait1": {
      "main": [
        [
          {
            "node": "Remove User from Waiting1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "Wait1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "Simple Response Generator1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Simple Response Generator1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Simple Response Generator1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Information Extractor1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add User to Waiting1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation History1": {
      "main": [
        [
          {
            "node": "Check User Session1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation History Sheet1": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Conversation History1": {
      "main": [
        [
          {
            "node": "HTTP Request4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code3": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Response Generator1": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin Alert Code1": {
      "main": [
        [
          {
            "node": "Save to Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Get Conversation History1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Notification Before Admin": {
      "main": [
        [
          {
            "node": "HTTP Send Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Send Notification": {
      "main": [
        [
          {
            "node": "Add User to Waiting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin Alert Code": {
      "main": [
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Text Classifier1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Question and Answer Chain": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever1": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Qdrant Vector Store1": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever1",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI1": {
      "ai_embedding": [
        [
          {
            "node": "Qdrant Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Text Classifier1": {
      "main": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Alert Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Admin Alert Code2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Text Classifier1",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Get Conversation History Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check User Session": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add User to Waiting": {
      "main": [
        [
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Remove User from Waiting": {
      "main": [
        [
          {
            "node": "Clear sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Remove User from Waiting",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet1": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Simple Response Generator",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Simple Response Generator",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Simple Response Generator",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Code4",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Notification Before Admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation History": {
      "main": [
        [
          {
            "node": "Check User Session",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Conversation History Sheet": {
      "main": [
        [
          {
            "node": "Message a model1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to Conversation History": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code4": {
      "main": [
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Response Generator": {
      "main": [
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Admin Alert Code2": {
      "main": [
        [
          {
            "node": "Save to Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model1": {
      "main": [
        [
          {
            "node": "Get Conversation History",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message2": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "e70b90a5-70be-4039-b498-191b4e8f93fe",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fd5919dd03bd784110bab3b74573e46d52f790c4d0d428fa77900638357ee332"
  },
  "id": "jx8b23bUoSUakndJ",
  "tags": []
}