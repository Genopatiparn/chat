{
  "name": "GNN with Caching System",
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "OK",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "text/plain"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        -4080,
        6480
      ],
      "id": "4294e897-4ac5-4a44-a78e-ce7760081176",
      "name": "Respond to Webhook1"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const userMessage = $json.message || '';\n  console.log('Processing message with FAQ Cache:', userMessage);\n  \n  // р╣Ар╕Кр╣Зр╕Д FAQ Cache р╕Бр╣Ир╕нр╕Щ\n  const faqResponse = checkFAQCache(userMessage);\n  if (faqResponse) {\n    console.log('FAQ Cache hit for:', userMessage);\n    return [{\n      json: {\n        output: {\n          issue: userMessage,\n          name: '',\n          phone: ''\n        },\n        faqResponse: faqResponse,\n        source: 'faq_cache'\n      }\n    }];\n  }\n  \n  // р╕Цр╣Йр╕▓р╣Др╕бр╣Ир╕Юр╕Ър╣Гр╕Щ FAQ р╣Гр╕лр╣Йр╣Гр╕Кр╣Й AI extraction\n  console.log('No FAQ match, proceeding with AI extraction');\n  return [{\n    json: {\n      message: userMessage,\n      source: 'needs_ai_extraction'\n    }\n  }];\n  \n} catch (error) {\n  console.error('Enhanced Information Extractor Error:', error);\n  return [{\n    json: {\n      output: {\n        issue: $json.message || 'р╣Др╕бр╣Ир╕гр╕░р╕Ър╕╕',\n        name: '',\n        phone: ''\n      },\n      source: 'error_fallback'\n    }\n  }];\n}\n\n// FAQ Cache Function\nfunction checkFAQCache(userMessage) {\n  const message = userMessage.toLowerCase().trim();\n  \n  // POS Usage\n  if (message.includes('pos') || message.includes('р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ') || message.includes('р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Й')) {\n    return `ЁЯУ▒ р╕зр╕┤р╕Шр╕╡р╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ POS р╕гр╕░р╕Ър╕Ъ\n\n1. р╣Ар╕Ыр╕┤р╕Фр╣Бр╕нр╕Ы POS р╕Ър╕Щр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕З\n2. р╣Ар╕ер╕╖р╕нр╕Бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Вр╕▓р╕в\n3. р╣Гр╕кр╣Ир╕Ир╕│р╕Щр╕зр╕Щр╕кр╕┤р╕Щр╕Др╣Йр╕▓\n4. р╣Ар╕ер╕╖р╕нр╕Бр╕зр╕┤р╕Шр╕╡р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ\n5. р╕Юр╕┤р╕бр╕Юр╣Мр╣Гр╕Ър╣Ар╕кр╕гр╣Зр╕И\n\nЁЯУЮ р╕лр╕▓р╕Бр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕Др╕зр╕▓р╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕б р╣Вр╕Чр╕г: 02-222-2222`;\n  }\n  \n  // Add Product\n  if (message.includes('р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓') || message.includes('р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И') || message.includes('р╣Гр╕кр╣Ир╕кр╕┤р╕Щр╕Др╣Йр╕▓')) {\n    return `тЮХ р╕зр╕┤р╕Шр╕╡р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И\n\n1. р╣Ар╕Вр╣Йр╕▓р╣Ар╕бр╕Щр╕╣ \"р╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕кр╕┤р╕Щр╕Др╣Йр╕▓\"\n2. р╕Бр╕Фр╕Ыр╕╕р╣Ир╕б \"р╣Ар╕Юр╕┤р╣Ир╕бр╕кр╕┤р╕Щр╕Др╣Йр╕▓р╣Гр╕лр╕бр╣И\"\n3. р╕Бр╕гр╕нр╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е: р╕Кр╕╖р╣Ир╕нр╕кр╕┤р╕Щр╕Др╣Йр╕▓, р╕гр╕▓р╕Др╕▓, р╕гр╕лр╕▒р╕кр╕кр╕┤р╕Щр╕Др╣Йр╕▓, р╕лр╕бр╕зр╕Фр╕лр╕бр╕╣р╣И\n4. р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е\n\nЁЯТб р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Бр╕Бр╕Щ Barcode р╣Др╕Фр╣Йр╕Фр╣Йр╕зр╕вр╕Др╣Ир╕░`;\n  }\n  \n  // Connection Issues\n  if (message.includes('р╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н') || message.includes('р╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Щр╣Зр╕Х') || message.includes('р╕гр╕░р╕Ър╕Ър╕ер╣Ир╕б') || message.includes('р╣Др╕бр╣Ир╣Др╕Фр╣Й')) {\n    return `ЁЯФз р╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н\n\n1. р╣Ар╕Кр╣Зр╕Др╕кр╕▒р╕Нр╕Нр╕▓р╕Ур╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Щр╣Зр╕Х\n2. р╕гр╕╡р╕кр╕Хр╕▓р╕гр╣Мр╕Чр╣Бр╕нр╕Ы POS\n3. р╣Ар╕Кр╣Зр╕Др╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н WiFi\n4. р╕ер╕нр╕Зр╣Гр╕Кр╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕бр╕╖р╕нр╕Цр╕╖р╕н\n\nтЪая╕П р╕лр╕▓р╕Бр╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Й р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕н: 02-222-2222 (24 р╕Кр╕б.)`;\n  }\n  \n  // Printing Issues\n  if (message.includes('р╕Юр╕┤р╕бр╕Юр╣М') || message.includes('р╣Гр╕Ър╣Ар╕кр╕гр╣Зр╕И') || message.includes('р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Юр╕┤р╕бр╕Юр╣М') || message.includes('р╕Ыр╕гр╕┤р╣Йр╕Щ')) {\n    return `ЁЯЦия╕П р╣Бр╕Бр╣Йр╣Др╕Вр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╕Юр╕┤р╕бр╕Юр╣М\n\n1. р╣Ар╕Кр╣Зр╕Др╕Бр╕гр╕░р╕Фр╕▓р╕йр╣Гр╕Щр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Юр╕┤р╕бр╕Юр╣М\n2. р╣Ар╕Кр╣Зр╕Др╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н Bluetooth/USB\n3. р╕гр╕╡р╕кр╕Хр╕▓р╕гр╣Мр╕Чр╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Юр╕┤р╕бр╕Юр╣М\n4. р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Юр╕┤р╕бр╕Юр╣Мр╣Гр╕лр╕бр╣И\n\nЁЯУЛ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕Зр╣Гр╕Ър╣Ар╕кр╕гр╣Зр╕Ир╕Чр╕▓р╕З Email р╣Др╕Фр╣Йр╕Фр╣Йр╕зр╕вр╕Др╣Ир╕░`;\n  }\n  \n  // Payment\n  if (message.includes('р╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ') || message.includes('р╕гр╕▒р╕Ър╣Ар╕Зр╕┤р╕Щ') || message.includes('qr') || message.includes('р╣Вр╕нр╕Щ') || message.includes('р╕Ър╕▒р╕Хр╕г')) {\n    return `ЁЯТ│ р╕зр╕┤р╕Шр╕╡р╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░р╣Ар╕Зр╕┤р╕Щ\n\nтЬЕ р╕гр╕нр╕Зр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Кр╕│р╕гр╕░:\n- р╣Ар╕Зр╕┤р╕Щр╕кр╕Ф\n- р╕Ър╕▒р╕Хр╕гр╣Ар╕Др╕гр╕Фр╕┤р╕Х/р╣Ар╕Фр╕Ър╕┤р╕Х\n- QR Code (PromptPay)\n- р╣Вр╕нр╕Щр╣Ар╕Зр╕┤р╕Щ\n- р╣Ар╕Зр╕┤р╕Щр╕Чр╕нр╕Щ\n\nЁЯУ▒ р╕кр╣Бр╕Бр╕Щ QR р╕Ьр╣Ир╕▓р╕Щр╣Бр╕нр╕Ы Banking р╣Др╕Фр╣Йр╣Ар╕ер╕вр╕Др╣Ир╕░`;\n  }\n  \n  // Reports\n  if (message.includes('р╕вр╕нр╕Фр╕Вр╕▓р╕в') || message.includes('р╕гр╕▓р╕вр╕Зр╕▓р╕Щ') || message.includes('р╕кр╕гр╕╕р╕Ы') || message.includes('р╕кр╕Цр╕┤р╕Хр╕┤')) {\n    return `ЁЯУК р╕Фр╕╣р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕вр╕нр╕Фр╕Вр╕▓р╕в\n\n1. р╣Ар╕Вр╣Йр╕▓р╣Ар╕бр╕Щр╕╣ \"р╕гр╕▓р╕вр╕Зр╕▓р╕Щ\"\n2. р╣Ар╕ер╕╖р╕нр╕Бр╕Кр╣Ир╕зр╕Зр╣Ар╕зр╕ер╕▓: р╕гр╕▓р╕вр╕зр╕▒р╕Щ/р╕кр╕▒р╕Ыр╕Фр╕▓р╕лр╣М/р╣Ар╕Фр╕╖р╕нр╕Щ\n3. р╕Фр╕╣р╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф: р╕вр╕нр╕Фр╕Вр╕▓р╕вр╕гр╕зр╕б, р╕Ир╕│р╕Щр╕зр╕Щр╕Ър╕┤р╕е, р╕кр╕┤р╕Щр╕Др╣Йр╕▓р╕Вр╕▓р╕вр╕Фр╕╡\n\nЁЯУИ р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╣Ир╕Зр╕нр╕нр╕Бр╣Ар╕Ыр╣Зр╕Щ Excel р╣Др╕Фр╣Йр╕Др╣Ир╕░`;\n  }\n  \n  // Backup\n  if (message.includes('р╕кр╕│р╕гр╕нр╕З') || message.includes('backup') || message.includes('р╕Бр╕╣р╣Йр╕Вр╣Йр╕нр╕бр╕╣р╕е')) {\n    return `ЁЯТ╛ р╕Бр╕▓р╕гр╕кр╕│р╕гр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е\n\nЁЯФД р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤: р╕кр╕│р╕гр╕нр╕Зр╕Чр╕╕р╕Б 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З р╣Ар╕Бр╣Зр╕Ър╕Ър╕Щ Cloud р╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в 100%\n\nЁЯУе р╕кр╕│р╕гр╕нр╕Зр╕Фр╣Йр╕зр╕вр╕Хр╕Щр╣Ар╕нр╕З:\n1. р╣Ар╕Вр╣Йр╕▓р╣Ар╕бр╕Щр╕╣ \"р╕Хр╕▒р╣Йр╕Зр╕Др╣Ир╕▓\"\n2. р╣Ар╕ер╕╖р╕нр╕Б \"р╕кр╕│р╕гр╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е\"\n3. р╕Бр╕Ф \"р╕кр╕│р╕гр╕нр╕Зр╣Ар╕Фр╕╡р╣Лр╕вр╕зр╕Щр╕╡р╣Й\"\n\nтЬЕ р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕вр╣Бр╕Щр╣Ир╕Щр╕нр╕Щр╕Др╣Ир╕░`;\n  }\n  \n  // Contact\n  if (message.includes('р╕Хр╕┤р╕Фр╕Хр╣Ир╕н') || message.includes('р╣Ар╕Ър╕нр╕гр╣М') || message.includes('р╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕н') || message.includes('р╣Вр╕Чр╕г')) {\n    return `ЁЯУЮ р╕Кр╣Ир╕нр╕Зр╕Чр╕▓р╕Зр╕Хр╕┤р╕Фр╕Хр╣Ир╕н\n\nЁЯХР 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕З: 02-222-2222\nЁЯТм LINE: @support_pos\nЁЯУз Email: support@company.com\n\nЁЯПв р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щ:\nр╕Ир╕▒р╕Щр╕Чр╕гр╣М-р╕ир╕╕р╕Бр╕гр╣М 9:00-18:00\nр╣Ар╕кр╕▓р╕гр╣М 9:00-16:00\n\nтЪб р╕Хр╕нр╕Ър╕Бр╕ер╕▒р╕Ър╕ар╕▓р╕вр╣Гр╕Щ 30 р╕Щр╕▓р╕Чр╕╡р╕Др╣Ир╕░`;\n  }\n  \n  return null; // р╣Др╕бр╣Ир╕Юр╕Ър╣Гр╕Щ FAQ\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -6800,
        6460
      ],
      "id": "faq-cache-checker",
      "name": "FAQ Cache Checker"
    },
    {
      "parameters": {
        "text": "={{ $json.message }}",
        "attributes": {
          "attributes": [
            {
              "name": "name",
              "description": "р╕Кр╕╖р╣Ир╕н ,  Name"
            },
            {
              "name": "phone",
              "description": "р╣Ар╕Ър╕нр╕гр╣М"
            },
            {
              "name": "issue",
              "description": "р╕Ыр╕▒р╕Нр╕лр╕▓",
              "required": true
            }
          ]
        },
        "options": {
          "systemPromptTemplate": "р╕Др╕╕р╕Ур╣Ар╕Ыр╣Зр╕Щр╕Ьр╕╣р╣Йр╣Ар╕Кр╕╡р╣Ир╕вр╕зр╕Кр╕▓р╕Нр╕Чр╕╡р╣Ир╕кр╕Бр╕▒р╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕▓р╕Бр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б р╣Вр╕Фр╕вр╕Др╕│р╕Щр╕╢р╕Зр╕Цр╕╢р╕Зр╕Ър╕гр╕┤р╕Ър╕Чр╕Бр╕▓р╕гр╕кр╕Щр╕Чр╕Щр╕▓\n\nр╕Бр╕гр╕╕р╕Ур╕▓р╕кр╕Бр╕▒р╕Фр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Хр╕▓р╕бр╕Чр╕╡р╣Ир╕Бр╕│р╕лр╕Щр╕Ф"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -6400,
        6200
      ],
      "id": "ai-information-extractor",
      "name": "AI Information Extractor"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  const userMessage = inputData.output?.issue || inputData.message || 'р╕Др╕│р╕Цр╕▓р╕бр╕Чр╕▒р╣Ир╕зр╣Др╕Ы';\n  const startTime = Date.now();\n  const timeout = 25000; // 25 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡\n  \n  console.log('Processing QA with timeout for:', userMessage);\n  \n  // р╣Ар╕Кр╣Зр╕Д FAQ р╕Бр╣Ир╕нр╕Щ (р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Ар╕Кр╣Зр╕Д)\n  if (inputData.source === 'faq_cache') {\n    return [{\n      json: {\n        response: inputData.faqResponse,\n        source: 'faq_cache',\n        responseTime: Date.now() - startTime\n      }\n    }];\n  }\n  \n  // р╕кр╕│р╕лр╕гр╕▒р╕Ъ AI call р╕Ир╕гр╕┤р╕З - р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б AI р╕Юр╕гр╣Йр╕нр╕б timeout\n  try {\n    const aiResponse = await new Promise((resolve, reject) => {\n      // Timeout handler\n      const timeoutId = setTimeout(() => {\n        reject(new Error('AI_TIMEOUT'));\n      }, timeout);\n      \n      // р╕Ир╕│р╕ер╕нр╕З AI call (р╣Гр╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ир╕гр╕┤р╕Зр╕Ир╕░р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Б OpenAI API)\n      setTimeout(() => {\n        clearTimeout(timeoutId);\n        // р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕Хр╕нр╕Ър╕Вр╕нр╕З AI\n        if (Math.random() > 0.1) { // 90% success rate\n          resolve({\n            response: `р╕Вр╕нр╕нр╕ар╕▒р╕вр╕Др╣Ир╕░ р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Йр╕Юр╕▓р╕░р╣Ар╕Ир╕▓р╕░р╕Ир╕Зр╕кр╕│р╕лр╕гр╕▒р╕Ъ \"${userMessage}\" р╣Гр╕Щр╣Ар╕нр╕Бр╕кр╕▓р╕гр╕Др╣Ир╕░\\n\\nр╣Бр╕Хр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╕Вр╕нр╕Др╕зр╕▓р╕бр╕Кр╣Ир╕зр╕вр╣Ар╕лр╕ер╕╖р╕нр╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕бр╣Др╕Фр╣Йр╕Чр╕╡р╣И:\\nЁЯУЮ р╣Вр╕Чр╕г: 02-222-2222\\nЁЯТм LINE: @support_pos\\n\\nр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕Ир╕░р╕Хр╕нр╕Ър╕Бр╕ер╕▒р╕Ър╕ар╕▓р╕вр╣Гр╕Щ 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕Зр╕Др╣Ир╕░`,\n            responseTime: Date.now() - startTime\n          });\n        } else {\n          reject(new Error('AI_ERROR'));\n        }\n      }, Math.random() * 3000 + 1000); // 1-4 р╕зр╕┤р╕Щр╕▓р╕Чр╕╡\n    });\n    \n    console.log('AI response received in', aiResponse.responseTime, 'ms');\n    return [{\n      json: {\n        response: aiResponse.response,\n        source: 'ai_success',\n        responseTime: aiResponse.responseTime\n      }\n    }];\n    \n  } catch (error) {\n    console.error('AI call failed:', error.message);\n    throw error;\n  }\n  \n} catch (error) {\n  console.error('Enhanced QA Chain Error:', error);\n  \n  let fallbackMessage = \"р╕Вр╕нр╕нр╕ар╕▒р╕вр╕Др╣Ир╕░ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е\";\n  let requiresHuman = false;\n  \n  if (error.message === 'AI_TIMEOUT') {\n    fallbackMessage = \"р╕гр╕░р╕Ър╕Ър╕Бр╕│р╕ер╕▒р╕Зр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕ер╕Кр╣Йр╕▓р╕Бр╕зр╣Ир╕▓р╕Ыр╕Бр╕Хр╕┤ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣Ир╣Бр╕ер╣Йр╕зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Др╣Ир╕░\";\n    requiresHuman = true;\n  } else if (error.message.includes('rate_limit') || error.message.includes('429')) {\n    fallbackMessage = \"р╕Вр╕Ур╕░р╕Щр╕╡р╣Йр╕бр╕╡р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Ар╕вр╕нр╕░ р╕Бр╕гр╕╕р╕Ур╕▓р╕гр╕нр╕кр╕▒р╕Бр╕Др╕гр╕╣р╣Ир╣Бр╕ер╣Йр╕зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Др╣Ир╕░\";\n    requiresHuman = true;\n  } else if (error.message.includes('network') || error.message.includes('connection')) {\n    fallbackMessage = \"р╣Ар╕Бр╕┤р╕Фр╕Ыр╕▒р╕Нр╕лр╕▓р╕Бр╕▓р╕гр╣Ар╕Кр╕╖р╣Ир╕нр╕бр╕Хр╣Ир╕н р╕Бр╕гр╕╕р╕Ур╕▓р╣Ар╕Кр╣Зр╕Др╕нр╕┤р╕Щр╣Ар╕Чр╕нр╕гр╣Мр╣Ар╕Щр╣Зр╕Хр╣Бр╕ер╣Йр╕зр╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕Др╣Ир╕░\";\n    requiresHuman = true;\n  }\n  \n  if (requiresHuman) {\n    fallbackMessage += \"\\n\\nр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╕Ир╕░р╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╕Бр╕ер╕▒р╕Ър╕ар╕▓р╕вр╣Гр╕Щ 24 р╕Кр╕▒р╣Ир╕зр╣Вр╕бр╕Зр╕Др╣Ир╕░\\nр╕лр╕▓р╕Бр╣Ар╕гр╣Ир╕Зр╕Фр╣Ир╕зр╕Щ р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕н: 02-222-2222\";\n  }\n  \n  return [{\n    json: {\n      response: fallbackMessage,\n      source: 'fallback',\n      requiresHumanResponse: requiresHuman,\n      error: error.message,\n      responseTime: Date.now() - startTime\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5840,
        5740
      ],
      "id": "enhanced-qa-with-timeout",
      "name": "Enhanced QA with Timeout"
    },
    {
      "parameters": {
        "jsCode": "try {\n  const inputData = $input.first().json;\n  console.log('Response Handler - Input data:', JSON.stringify(inputData, null, 2));\n  \n  // р╕Фр╕╢р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е response\n  const userReply = inputData.response || inputData.text || inputData.output || inputData.answer || '';\n  const source = inputData.source || 'unknown';\n  const responseTime = inputData.responseTime || 0;\n  \n  // Log р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ Cache\n  await logCacheUsage({\n    userId: $('Edit Fields1').first().json.body.events[0].source.userId,\n    message: $('Edit Fields1').first().json.body.events[0].message.text,\n    source: source,\n    responseTime: responseTime,\n    timestamp: new Date().toISOString()\n  });\n  \n  // р╣Ар╕Кр╣Зр╕Др╕зр╣Ир╕▓р╕бр╕╡р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕гр╕╖р╕нр╣Др╕бр╣И\n  if (!userReply || userReply.trim() === '') {\n    console.log('No response data found, using default message');\n    return [{\n      json: {\n        text: \"р╕Вр╕нр╕нр╕ар╕▒р╕вр╕Др╣Ир╕░ р╣Др╕бр╣Ир╕Юр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕г р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╕Цр╕▓р╕бр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Др╣Ир╕░\\n\\nр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Хр╕┤р╕Фр╕Хр╣Ир╕нр╣Ар╕Ир╣Йр╕▓р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣Ир╣Др╕Фр╣Йр╕Чр╕╡р╣И: 02-222-2222\"\n      }\n    }];\n  }\n  \n  console.log('Response sent - Source:', source, 'Time:', responseTime + 'ms');\n  \n  return [{\n    json: {\n      text: userReply,\n      metadata: {\n        source: source,\n        responseTime: responseTime,\n        timestamp: new Date().toISOString()\n      }\n    }\n  }];\n  \n} catch (error) {\n  console.error('Error in Response Handler:', error);\n  return [{\n    json: {\n      text: \"р╕Вр╕нр╕нр╕ар╕▒р╕вр╕Др╣Ир╕░ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Др╣Ир╕░\\n\\nр╕лр╕▓р╕Бр╕Ыр╕▒р╕Нр╕лр╕▓р╕вр╕▒р╕Зр╕Др╕Зр╕нр╕вр╕╣р╣И р╕Бр╕гр╕╕р╕Ур╕▓р╕Хр╕┤р╕Фр╕Хр╣Ир╕н: 02-222-2222\"\n    }\n  }];\n}\n\n// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ Log р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ Cache\nasync function logCacheUsage(data) {\n  try {\n    // р╣Гр╕Щр╕Чр╕╡р╣Ир╕Щр╕╡р╣Йр╕Др╕зр╕гр╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕ер╕З Google Sheets р╕лр╕гр╕╖р╕н Database\n    console.log('Cache Usage Log:', JSON.stringify(data, null, 2));\n    \n    // р╕кр╕Цр╕┤р╕Хр╕┤р╣Ар╕Ър╕╖р╣Йр╕нр╕Зр╕Хр╣Йр╕Щ\n    if (data.source === 'faq_cache') {\n      console.log('тЬЕ FAQ Cache Hit - Fast Response');\n    } else if (data.source === 'ai_success') {\n      console.log('ЁЯдЦ AI Success - Response Time:', data.responseTime + 'ms');\n    } else if (data.source === 'fallback') {\n      console.log('тЪая╕П Fallback Used - Potential Issue');\n    }\n  } catch (error) {\n    console.error('Error logging cache usage:', error);\n  }\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -5420,
        5740
      ],
      "id": "response-handler-with-logging",
      "name": "Response Handler with Logging"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1k_mbgTvK24Sf5X17zCcpJYWfDPLjI0yYBZ2wTbLylvk",
          "mode": "list",
          "cachedResultName": "Session"
        },
        "sheetName": {
          "__rl": true,
          "value": "CacheStats",
          "mode": "manual"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ new Date().toISOString() }}",
            "userId": "={{ $('Edit Fields1').first().json.body.events[0].source.userId }}",
            "message": "={{ $('Edit Fields1').first().json.body.events[0].message.text }}",
            "source": "={{ $json.source || 'unknown' }}",
            "responseTime": "={{ $json.responseTime || 0 }}",
            "error": "={{ $json.error || '' }}"
          }
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -5000,
        5740
      ],
      "id": "cache-stats-logger",
      "name": "Cache Stats Logger",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "yXwpG74z0WCiuGZW",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  const today = new Date();\n  const startOfDay = new Date(today.setHours(0,0,0,0));\n  \n  // р╕Ир╕│р╕ер╕нр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ (р╣Гр╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ир╕гр╕┤р╕Зр╕Ир╕░р╕Фр╕╢р╕Зр╕Ир╕▓р╕Б Google Sheets)\n  const mockUsageData = [\n    { source: 'faq_cache', responseTime: 50, timestamp: new Date() },\n    { source: 'ai_success', responseTime: 3500, timestamp: new Date() },\n    { source: 'fallback', responseTime: 25000, error: 'AI_TIMEOUT', timestamp: new Date() }\n  ];\n  \n  const stats = {\n    totalRequests: 0,\n    faqHits: 0,\n    aiCalls: 0,\n    timeouts: 0,\n    errors: 0,\n    avgResponseTime: 0\n  };\n  \n  // р╕зр╕┤р╣Ар╕Др╕гр╕▓р╕░р╕лр╣Мр╕Вр╣Йр╕нр╕бр╕╣р╕е\n  mockUsageData.forEach(item => {\n    stats.totalRequests++;\n    \n    if (item.source === 'faq_cache') {\n      stats.faqHits++;\n    } else if (item.source === 'ai_success') {\n      stats.aiCalls++;\n      stats.avgResponseTime += item.responseTime;\n    } else if (item.source === 'fallback' && item.error === 'AI_TIMEOUT') {\n      stats.timeouts++;\n    } else if (item.source === 'fallback') {\n      stats.errors++;\n    }\n  });\n  \n  // р╕Др╕│р╕Щр╕зр╕Ур╕Др╣Ир╕▓р╣Ар╕Йр╕ер╕╡р╣Ир╕в\n  if (stats.aiCalls > 0) {\n    stats.avgResponseTime = Math.round(stats.avgResponseTime / stats.aiCalls);\n  }\n  \n  // р╕Др╕│р╕Щр╕зр╕У Cache Hit Rate\n  const cacheHitRate = stats.totalRequests > 0 ? \n    Math.round((stats.faqHits / stats.totalRequests) * 100) : 0;\n  \n  // р╕кр╕гр╣Йр╕▓р╕Зр╕гр╕▓р╕вр╕Зр╕▓р╕Щ\n  const report = `ЁЯУК р╕гр╕▓р╕вр╕Зр╕▓р╕Щ Cache Performance\n\nЁЯФв р╕кр╕Цр╕┤р╕Хр╕┤р╕гр╕зр╕б:\n- р╕Др╕│р╕Вр╕нр╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф: ${stats.totalRequests}\n- FAQ Cache Hits: ${stats.faqHits} (${cacheHitRate}%)\n- AI Calls: ${stats.aiCalls}\n- Timeouts: ${stats.timeouts}\n- Errors: ${stats.errors}\n\nтЪб Performance:\n- р╣Ар╕зр╕ер╕▓р╕Хр╕нр╕Ър╣Ар╕Йр╕ер╕╡р╣Ир╕в: ${stats.avgResponseTime}ms\n- Cache Hit Rate: ${cacheHitRate}%\n\nЁЯТб р╕кр╕Цр╕▓р╕Щр╕░: ${cacheHitRate > 40 ? 'тЬЕ р╕Фр╕╡' : 'тЪая╕П р╕Др╕зр╕гр╕Ыр╕гр╕▒р╕Ър╕Ыр╕гр╕╕р╕З'}`;\n  \n  console.log('Performance Report Generated:', report);\n  \n  return [{\n    json: {\n      report: report,\n      stats: stats,\n      cacheHitRate: cacheHitRate,\n      status: cacheHitRate > 40 ? 'good' : 'needs_improvement'\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      error: error.message,\n      report: \"р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕гр╣Йр╕▓р╕Зр╕гр╕▓р╕вр╕Зр╕▓р╕Щр╣Др╕Фр╣Й\"\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4000,
        5500
      ],
      "id": "performance-monitor",
      "name": "Performance Monitor"
    },
    {
      "parameters": {
        "jsCode": "try {\n  // р╣Ар╕Кр╣Зр╕Др╕кр╕Цр╕▓р╕Щр╕░ Services\n  const healthChecks = {\n    system: true,\n    faqCache: true,\n    aiService: Math.random() > 0.1, // р╕Ир╕│р╕ер╕нр╕З 90% uptime\n    database: true,\n    lineApi: true\n  };\n  \n  const allHealthy = Object.values(healthChecks).every(status => status);\n  const healthyCount = Object.values(healthChecks).filter(status => status).length;\n  const totalServices = Object.keys(healthChecks).length;\n  \n  const healthReport = `ЁЯПе Health Check Report\n\nЁЯУК Services Status (${healthyCount}/${totalServices}):\n${Object.entries(healthChecks).map(([service, status]) => \n    `${status ? 'тЬЕ' : 'тЭМ'} ${service}: ${status ? 'Healthy' : 'Down'}`\n  ).join('\\n')}\n\nЁЯОп Overall Status: ${allHealthy ? 'тЬЕ All Systems Operational' : 'тЪая╕П Some Issues Detected'}\n\nтП░ Last Check: ${new Date().toLocaleString('th-TH')}`;\n  \n  console.log('Health Check Completed:', healthReport);\n  \n  return [{\n    json: {\n      report: healthReport,\n      services: healthChecks,\n      overallStatus: allHealthy ? 'healthy' : 'degraded',\n      timestamp: new Date().toISOString()\n    }\n  }];\n  \n} catch (error) {\n  return [{\n    json: {\n      error: error.message,\n      report: \"Health check failed\",\n      overallStatus: 'error'\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -4000,
        5800
      ],
      "id": "health-check",
      "name": "Health Check"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "tyreis88",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -9220,
        6460
      ],
      "id": "webhook-main",
      "name": "Webhook1",
      "webhookId": "10a617e8-a0f3-401f-be76-79e386e0e4b8"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a027155a-071f-4e2c-9905-1b41abea507c",
              "name": "body.events[0].replyToken",
              "value": "={{ $('Webhook1').item.json.body.events[0].replyToken }}",
              "type": "string"
            },
            {
              "id": "812a988a-0520-46ed-af6f-0a431814a1bd",
              "name": "body.events[0].message.text",
              "value": "={{ $json.body.events[0].message.text }}",
              "type": "string"
            },
            {
              "id": "01feb716-a36a-4d7d-ac12-19bd0bb4b796",
              "name": "body.events[0].source.userId",
              "value": "={{ $json.body.events[0].source.userId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -8920,
        6460
      ],
      "id": "edit-fields-main",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.line.me/v2/bot/message/reply",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ {\n  \"replyToken\": $('Edit Fields1').item.json.body.events[0].replyToken,\n  \"messages\": [\n    {\n      \"type\": \"text\",\n      \"text\": $json.text || 'р╕Вр╕нр╕нр╕ар╕▒р╕вр╕Др╣Ир╕░ р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Гр╕Щр╕Бр╕▓р╕гр╕Ыр╕гр╕░р╕бр╕зр╕ер╕Ьр╕е р╕Бр╕гр╕╕р╕Ур╕▓р╕ер╕нр╕Зр╣Гр╕лр╕бр╣Ир╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕Зр╕Др╣Ир╕░'\n    }\n  ]\n} }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -4560,
        6480
      ],
      "id": "line-reply-main",
      "name": "LINE Reply",
      "credentials": {
        "httpHeaderAuth": {
          "id": "Cx3x2Lw4eG9d4Xyr",
          "name": "Header Auth account 2"
        }
      }
    }
  ],
  "connections": {
    "Webhook1": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "FAQ Cache Checker",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "FAQ Cache Checker": {
      "main": [
        [
          {
            "node": "AI Information Extractor",
            "type": "main",
            "index": 0
          },
          {
            "node": "Enhanced QA with Timeout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Information Extractor": {
      "main": [
        [
          {
            "node": "Enhanced QA with Timeout",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enhanced QA with Timeout": {
      "main": [
        [
          {
            "node": "Response Handler with Logging",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Response Handler with Logging": {
      "main": [
        [
          {
            "node": "Cache Stats Logger",
            "type": "main",
            "index": 0
          },
          {
            "node": "LINE Reply",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-01-22T10:00:00.000Z",
  "versionId": "cache-enabled-v1"
}