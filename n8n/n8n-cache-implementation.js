// n8n Cache Implementation Code
// ‡πÉ‡∏ä‡πâ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏ô‡∏î Code ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡πÉ‡∏ô workflow

// 1. Enhanced Information Extractor with FAQ Cache
const enhancedInformationExtractor = `
try {
  const userMessage = $json.message || '';
  console.log('Processing message:', userMessage);
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ FAQ Cache ‡∏Å‡πà‡∏≠‡∏ô
  const faqResponse = checkFAQCache(userMessage);
  if (faqResponse) {
    console.log('FAQ Cache hit for:', userMessage);
    return [{
      json: {
        output: {
          issue: userMessage,
          name: '',
          phone: ''
        },
        faqResponse: faqResponse,
        source: 'faq_cache'
      }
    }];
  }
  
  // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô FAQ ‡πÉ‡∏´‡πâ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏Å‡∏ï‡∏¥
  const extractedData = $('Information Extractor1').item.json.output;
  
  if (!extractedData) {
    return [{
      json: {
        output: {
          issue: userMessage,
          name: '',
          phone: ''
        },
        source: 'fallback'
      }
    }];
  }
  
  return [{
    json: {
      output: extractedData,
      source: 'ai_extraction'
    }
  }];
  
} catch (error) {
  console.error('Enhanced Information Extractor Error:', error);
  return [{
    json: {
      output: {
        issue: $json.message || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏',
        name: '',
        phone: ''
      },
      source: 'error_fallback'
    }
  }];
}

// FAQ Cache Function
function checkFAQCache(userMessage) {
  const message = userMessage.toLowerCase().trim();
  
  // POS Usage
  if (message.includes('pos') || message.includes('‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô') || message.includes('‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ')) {
    return \`üì± ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô POS ‡∏£‡∏∞‡∏ö‡∏ö

1. ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ POS ‡∏ö‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á
2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢
3. ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
4. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
5. ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à

üìû ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ‡πÇ‡∏ó‡∏£: 02-222-2222\`;
  }
  
  // Add Product
  if (message.includes('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤') || message.includes('‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà') || message.includes('‡πÉ‡∏™‡πà‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤')) {
    return \`‚ûï ‡∏ß‡∏¥‡∏ò‡∏µ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà

1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π "‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
2. ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà"
3. ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏£‡∏≤‡∏Ñ‡∏≤, ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤, ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
4. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üí° ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πÅ‡∏Å‡∏ô Barcode ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞\`;
  }
  
  // Connection Issues
  if (message.includes('‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠') || message.includes('‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï') || message.includes('‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πà‡∏°') || message.includes('‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ')) {
    return \`üîß ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠

1. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï
2. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÅ‡∏≠‡∏õ POS
3. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WiFi
4. ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠

‚ö†Ô∏è ‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222 (24 ‡∏ä‡∏°.)\`;
  }
  
  // Printing Issues
  if (message.includes('‡∏û‡∏¥‡∏°‡∏û‡πå') || message.includes('‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à') || message.includes('‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå') || message.includes('‡∏õ‡∏£‡∏¥‡πâ‡∏ô')) {
    return \`üñ®Ô∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå

1. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå
2. ‡πÄ‡∏ä‡πá‡∏Ñ‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Bluetooth/USB
3. ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå
4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏°‡πà

üìã ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ó‡∏≤‡∏á Email ‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏∞\`;
  }
  
  // Payment
  if (message.includes('‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô') || message.includes('‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏¥‡∏ô') || message.includes('qr') || message.includes('‡πÇ‡∏≠‡∏ô') || message.includes('‡∏ö‡∏±‡∏ï‡∏£')) {
    return \`üí≥ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô

‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞:
- ‡πÄ‡∏á‡∏¥‡∏ô‡∏™‡∏î
- ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï
- QR Code (PromptPay)
- ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô
- ‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô

üì± ‡∏™‡πÅ‡∏Å‡∏ô QR ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏≠‡∏õ Banking ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏∞\`;
  }
  
  // Reports
  if (message.includes('‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢') || message.includes('‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô') || message.includes('‡∏™‡∏£‡∏∏‡∏õ') || message.includes('‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥')) {
    return \`üìä ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢

1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π "‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô"
2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤: ‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô/‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå/‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
3. ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏ß‡∏°, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ö‡∏¥‡∏•, ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ

üìà ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel ‡πÑ‡∏î‡πâ‡∏Ñ‡πà‡∏∞\`;
  }
  
  // Backup
  if (message.includes('‡∏™‡∏≥‡∏£‡∏≠‡∏á') || message.includes('backup') || message.includes('‡∏Å‡∏π‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•')) {
    return \`üíæ ‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

üîÑ ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏ó‡∏∏‡∏Å 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÄ‡∏Å‡πá‡∏ö‡∏ö‡∏ô Cloud ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ 100%

üì• ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á:
1. ‡πÄ‡∏Ç‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤"
2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"
3. ‡∏Å‡∏î "‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏ô‡∏µ‡πâ"

‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡πÅ‡∏ô‡πà‡∏ô‡∏≠‡∏ô‡∏Ñ‡πà‡∏∞\`;
  }
  
  // Contact
  if (message.includes('‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠') || message.includes('‡πÄ‡∏ö‡∏≠‡∏£‡πå') || message.includes('‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠') || message.includes('‡πÇ‡∏ó‡∏£')) {
    return \`üìû ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠

üïê 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á: 02-222-2222
üí¨ LINE: @support_pos
üìß Email: support@company.com

üè¢ ‡∏™‡∏≥‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô:
‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå-‡∏®‡∏∏‡∏Å‡∏£‡πå 9:00-18:00
‡πÄ‡∏™‡∏≤‡∏£‡πå 9:00-16:00

‚ö° ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 30 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏Ñ‡πà‡∏∞\`;
  }
  
  return null; // ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÉ‡∏ô FAQ
}
`;

// 2. Enhanced Question and Answer Chain with Timeout
const enhancedQAChain = `
try {
  const userMessage = $json.output.issue || $json.message || '‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ';
  const startTime = Date.now();
  const timeout = 25000; // 25 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  
  console.log('Processing QA for:', userMessage);
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ FAQ ‡∏Å‡πà‡∏≠‡∏ô (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏ä‡πá‡∏Ñ)
  if ($json.source === 'faq_cache') {
    return [{
      json: {
        response: $json.faqResponse,
        source: 'faq_cache'
      }
    }];
  }
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Promise ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö AI call
  const aiCall = new Promise((resolve, reject) => {
    try {
      // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å AI service (‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢ actual AI call)
      const result = $('Question and Answer Chain1').first();
      resolve(result);
    } catch (error) {
      reject(error);
    }
  });
  
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á timeout Promise
  const timeoutPromise = new Promise((_, reject) => {
    setTimeout(() => {
      reject(new Error('AI_TIMEOUT'));
    }, timeout);
  });
  
  // ‡∏£‡∏≠‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏´‡∏£‡∏∑‡∏≠ timeout
  const result = await Promise.race([aiCall, timeoutPromise]);
  
  if (result && result.json && result.json.response) {
    console.log('AI response received in', Date.now() - startTime, 'ms');
    return [{
      json: {
        response: result.json.response,
        source: 'ai_success',
        responseTime: Date.now() - startTime
      }
    }];
  } else {
    throw new Error('Empty AI response');
  }
  
} catch (error) {
  console.error('Enhanced QA Chain Error:', error);
  
  let fallbackMessage = "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•";
  let requiresHuman = false;
  
  if (error.message === 'AI_TIMEOUT') {
    fallbackMessage = "‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏ä‡πâ‡∏≤‡∏Å‡∏ß‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞";
    requiresHuman = true;
  } else if (error.message.includes('rate_limit') || error.message.includes('429')) {
    fallbackMessage = "‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏¢‡∏≠‡∏∞ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞";
    requiresHuman = true;
  } else if (error.message.includes('network') || error.message.includes('connection')) {
    fallbackMessage = "‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ä‡πá‡∏Ñ‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÄ‡∏ô‡πá‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏Ñ‡πà‡∏∞";
    requiresHuman = true;
  }
  
  if (requiresHuman) {
    fallbackMessage += "\\n\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222";
  }
  
  return [{
    json: {
      response: fallbackMessage,
      source: 'fallback',
      requiresHumanResponse: requiresHuman,
      error: error.message
    }
  }];
}
`;

// 3. Enhanced Admin Alert Code with Caching
const enhancedAdminAlert = `
try {
  const inputData = $input.first().json;
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô FAQ response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (inputData.source === 'faq_cache') {
    return [{
      json: {
        text: inputData.response
      }
    }];
  }
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ human response ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (inputData.requiresHumanResponse) {
    const extractedData = $('Information Extractor1').item.json.output;
    const name = extractedData?.name || '';
    const issue = extractedData?.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
    
    let userReply = name ? 
      \`‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì \${name}\\n‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "\${issue}"\\n‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\` :
      \`‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "\${issue}"\\n‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß ‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\`;
    
    return [{
      json: {
        text: userReply
      }
    }];
  }
  
  // ‡∏Å‡∏£‡∏ì‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥
  const extractedData = $('Information Extractor1').item.json.output;
  
  if (!extractedData) {
    return [{
      json: {
        text: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞"
      }
    }];
  }
  
  const name = extractedData.name || '';
  const issue = extractedData.issue || '‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';
  
  let userReply = name ? 
    \`‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏∏‡∏ì \${name}\\n‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "\${issue}"\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\` :
    \`‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "\${issue}"\\n‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Ñ‡πà‡∏∞\\n‡∏´‡∏≤‡∏Å‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: 02-222-2222\\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡πà‡∏∞\`;
  
  return [{
    json: {
      text: userReply
    }
  }];
  
} catch (error) {
  console.error('Enhanced Admin Alert Error:', error);
  return [{
    json: {
      text: "‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ 02-222-2222"
    }
  }];
}
`;

// 4. Health Check Code
const healthCheckCode = `
try {
  const healthChecks = {
    openai: false,
    qdrant: false,
    sheets: false,
    line: false
  };
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ OpenAI
  try {
    const openaiTest = await fetch('https://api.openai.com/v1/models', {
      method: 'GET',
      headers: {
        'Authorization': 'Bearer YOUR_OPENAI_KEY',
        'Content-Type': 'application/json'
      },
      timeout: 5000
    });
    healthChecks.openai = openaiTest.ok;
  } catch (e) {
    console.log('OpenAI health check failed:', e.message);
  }
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ Qdrant (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ endpoint)
  try {
    const qdrantTest = await fetch('YOUR_QDRANT_ENDPOINT/collections', {
      method: 'GET',
      timeout: 5000
    });
    healthChecks.qdrant = qdrantTest.ok;
  } catch (e) {
    console.log('Qdrant health check failed:', e.message);
  }
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ Google Sheets
  try {
    const sheetsTest = $('Get row(s) in sheet2');
    healthChecks.sheets = true;
  } catch (e) {
    console.log('Sheets health check failed:', e.message);
  }
  
  // ‡πÄ‡∏ä‡πá‡∏Ñ LINE API
  try {
    const lineTest = await fetch('https://api.line.me/v2/bot/info', {
      method: 'GET',
      headers: {
        'Authorization': 'Bearer YOUR_LINE_TOKEN'
      },
      timeout: 5000
    });
    healthChecks.line = lineTest.ok;
  } catch (e) {
    console.log('LINE health check failed:', e.message);
  }
  
  const allHealthy = Object.values(healthChecks).every(status => status);
  
  return [{
    json: {
      status: allHealthy ? 'healthy' : 'degraded',
      services: healthChecks,
      timestamp: Date.now(),
      message: allHealthy ? 'All services operational' : 'Some services experiencing issues'
    }
  }];
  
} catch (error) {
  return [{
    json: {
      status: 'error',
      error: error.message,
      timestamp: Date.now()
    }
  }];
}
`;

// 5. Cache Statistics Code
const cacheStatsCode = `
try {
  // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Cache
  const stats = {
    faqHits: 0,
    aiCalls: 0,
    timeouts: 0,
    errors: 0,
    avgResponseTime: 0
  };
  
  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheets ‡∏´‡∏£‡∏∑‡∏≠ Database
  // (‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏•‡∏≠‡∏á)
  
  const today = new Date().toISOString().split('T')[0];
  
  return [{
    json: {
      date: today,
      cacheStats: stats,
      recommendations: [
        stats.timeouts > 10 ? "‡∏û‡∏¥‡∏à‡∏≤‡∏£‡∏ì‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏° FAQ ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏ó‡∏µ‡πà timeout ‡∏ö‡πà‡∏≠‡∏¢" : null,
        stats.faqHits / (stats.faqHits + stats.aiCalls) < 0.3 ? "‡∏Ñ‡∏ß‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏° FAQ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°" : null,
        stats.errors > 5 ? "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ AI services" : null
      ].filter(Boolean)
    }
  }];
  
} catch (error) {
  return [{
    json: {
      error: error.message,
      timestamp: Date.now()
    }
  }];
}
`;

module.exports = {
  enhancedInformationExtractor,
  enhancedQAChain,
  enhancedAdminAlert,
  healthCheckCode,
  cacheStatsCode
};